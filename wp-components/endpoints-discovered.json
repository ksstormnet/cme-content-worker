{
  "connection_test": {
    "success": true,
    "data": {
      "site_name": "Cruise Made Easy",
      "description": "Your Cruise, Your Way â€” Without the Hassle",
      "url": "https://cruisemadeeasy.com",
      "namespaces": [
        "oembed/1.0",
        "fluent-smtp",
        "generateblocks/v1",
        "generatepress-pro/v1",
        "generatepress-site-library/v1",
        "generatepress-font-library/v1",
        "instant-images-extended",
        "instant-images",
        "matomo/v1",
        "performance-lab/v1",
        "convesio-caching/v1",
        "wordfence/v1",
        "filebird/v1",
        "filebird/public/v1",
        "generateblocks-pro/v1",
        "generateblocks-pro/advanced-conditions/v1",
        "generateblocks-pro/overlays/v1",
        "health-check/v1",
        "metaslider/v1",
        "objectcache/v1",
        "ultimate-markdown-pro/v1",
        "seopress/v1",
        "generatepress/v1",
        "font-awesome/v1",
        "optimization-detective/v1",
        "wp/v2",
        "wp-site-health/v1",
        "wp-block-editor/v1"
      ],
      "authentication": "verified"
    }
  },
  "endpoint_discovery": {
    "success": true,
    "data": {
      "oembed/1.0": {
        "namespace": "oembed/1.0",
        "routes": {
          "/oembed/1.0/embed": {
            "namespace": "oembed/1.0",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "url": {
                    "description": "The URL of the resource for which to fetch oEmbed data.",
                    "type": "string",
                    "format": "uri",
                    "required": true
                  },
                  "format": {
                    "default": "json",
                    "required": false
                  },
                  "maxwidth": {
                    "default": 600,
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/oembed/1.0/embed"
                }
              ]
            }
          },
          "/oembed/1.0/proxy": {
            "namespace": "oembed/1.0",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "url": {
                    "description": "The URL of the resource for which to fetch oEmbed data.",
                    "type": "string",
                    "format": "uri",
                    "required": true
                  },
                  "format": {
                    "description": "The oEmbed format to use.",
                    "type": "string",
                    "default": "json",
                    "enum": [
                      "json",
                      "xml"
                    ],
                    "required": false
                  },
                  "maxwidth": {
                    "description": "The maximum width of the embed frame in pixels.",
                    "type": "integer",
                    "default": 600,
                    "required": false
                  },
                  "maxheight": {
                    "description": "The maximum height of the embed frame in pixels.",
                    "type": "integer",
                    "required": false
                  },
                  "discover": {
                    "description": "Whether to perform an oEmbed discovery request for unsanctioned providers.",
                    "type": "boolean",
                    "default": true,
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/oembed/1.0/proxy"
                }
              ]
            }
          }
        },
        "methods": [
          "GET"
        ],
        "description": "Endpoints for oembed/1.0"
      },
      "fluent-smtp": {
        "namespace": "fluent-smtp",
        "routes": {
          "/fluent-smtp/outlook_callback": {
            "namespace": "fluent-smtp",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/fluent-smtp/outlook_callback"
                }
              ]
            }
          }
        },
        "methods": [
          "GET"
        ],
        "description": "Endpoints for fluent-smtp"
      },
      "generateblocks/v1": {
        "namespace": "generateblocks/v1",
        "routes": {
          "/generateblocks/v1/settings": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/settings"
                }
              ]
            }
          },
          "/generateblocks/v1/setting": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/setting"
                }
              ]
            }
          },
          "/generateblocks/v1/regenerate_css_files": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/regenerate_css_files"
                }
              ]
            }
          },
          "/generateblocks/v1/onboarding": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/onboarding"
                }
              ]
            }
          },
          "/generateblocks/v1/get-attachment-by-url": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-attachment-by-url"
                }
              ]
            }
          },
          "/generateblocks/v1/get-wp-query": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-wp-query"
                }
              ]
            }
          },
          "/generateblocks/v1/get-user-query": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-user-query"
                }
              ]
            }
          },
          "/generateblocks/v1/meta/get-post-meta": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-post-meta"
                }
              ]
            }
          },
          "/generateblocks/v1/meta/get-user-meta": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-user-meta"
                }
              ]
            }
          },
          "/generateblocks/v1/meta/get-term-meta": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-term-meta"
                }
              ]
            }
          },
          "/generateblocks/v1/meta/get-option": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-option"
                }
              ]
            }
          },
          "/generateblocks/v1/pattern-library/libraries": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/libraries"
                }
              ]
            }
          },
          "/generateblocks/v1/pattern-library/libraries/save": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/libraries/save"
                }
              ]
            }
          },
          "/generateblocks/v1/pattern-library/categories": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/categories"
                }
              ]
            }
          },
          "/generateblocks/v1/pattern-library/patterns": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/patterns"
                }
              ]
            }
          },
          "/generateblocks/v1/pattern-library/get-cache-data": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/get-cache-data"
                }
              ]
            }
          },
          "/generateblocks/v1/pattern-library/clear-cache": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/clear-cache"
                }
              ]
            }
          },
          "/generateblocks/v1/dynamic-tag-replacements": {
            "namespace": "generateblocks/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/dynamic-tag-replacements"
                }
              ]
            }
          },
          "/generateblocks/v1/post-record": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "postId": {
                    "required": true
                  },
                  "load": {
                    "required": false
                  },
                  "options": {
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/post-record"
                }
              ]
            }
          },
          "/generateblocks/v1/get-user-record": {
            "namespace": "generateblocks/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-user-record"
                }
              ]
            }
          }
        },
        "methods": [
          "POST",
          "PUT",
          "PATCH",
          "GET"
        ],
        "description": "Endpoints for generateblocks/v1"
      },
      "generatepress-pro/v1": {
        "namespace": "generatepress-pro/v1",
        "routes": {
          "/generatepress-pro/v1/modules": {
            "namespace": "generatepress-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/modules"
                }
              ]
            }
          },
          "/generatepress-pro/v1/license": {
            "namespace": "generatepress-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/license"
                }
              ]
            }
          },
          "/generatepress-pro/v1/beta": {
            "namespace": "generatepress-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/beta"
                }
              ]
            }
          },
          "/generatepress-pro/v1/export": {
            "namespace": "generatepress-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/export"
                }
              ]
            }
          },
          "/generatepress-pro/v1/import": {
            "namespace": "generatepress-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/import"
                }
              ]
            }
          },
          "/generatepress-pro/v1/reset": {
            "namespace": "generatepress-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/reset"
                }
              ]
            }
          }
        },
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "description": "Endpoints for generatepress-pro/v1"
      },
      "generatepress-site-library/v1": {
        "namespace": "generatepress-site-library/v1",
        "routes": {
          "/generatepress-site-library/v1/get_sites": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/get_sites"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/get_site_data": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/get_site_data"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/import_theme_options": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_theme_options"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/activate_plugins": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/activate_plugins"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/import_content": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_content"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/import_site_options": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_site_options"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/import_widgets": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_widgets"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/restore_theme_options": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/restore_theme_options"
                }
              ]
            }
          },
          "/generatepress-site-library/v1/restore_content": {
            "namespace": "generatepress-site-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/restore_content"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "description": "Endpoints for generatepress-site-library/v1"
      },
      "generatepress-font-library/v1": {
        "namespace": "generatepress-font-library/v1",
        "routes": {
          "/generatepress-font-library/v1/get-fonts": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/get-fonts"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/download-google-font": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/download-google-font"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/upload-fonts": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/upload-fonts"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/delete-font": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/delete-font"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/get-settings": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/get-settings"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/set-settings": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/set-settings"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/optimize-google-fonts": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/optimize-google-fonts"
                }
              ]
            }
          },
          "/generatepress-font-library/v1/update-font-post": {
            "namespace": "generatepress-font-library/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/update-font-post"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "description": "Endpoints for generatepress-font-library/v1"
      },
      "instant-images-extended": {
        "namespace": "instant-images-extended",
        "routes": {
          "/instant-images-extended/image-sizes": {
            "namespace": "instant-images-extended",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images-extended/image-sizes"
                }
              ]
            }
          },
          "/instant-images-extended/import-images": {
            "namespace": "instant-images-extended",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images-extended/import-images"
                }
              ]
            }
          },
          "/instant-images-extended/suggestions": {
            "namespace": "instant-images-extended",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images-extended/suggestions"
                }
              ]
            }
          }
        },
        "methods": [
          "POST",
          "GET"
        ],
        "description": "Endpoints for instant-images-extended"
      },
      "instant-images": {
        "namespace": "instant-images",
        "routes": {
          "/instant-images/test": {
            "namespace": "instant-images",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images/test"
                }
              ]
            }
          },
          "/instant-images/download": {
            "namespace": "instant-images",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images/download"
                }
              ]
            }
          },
          "/instant-images/settings": {
            "namespace": "instant-images",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images/settings"
                }
              ]
            }
          },
          "/instant-images/license": {
            "namespace": "instant-images",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/instant-images/license"
                }
              ]
            }
          }
        },
        "methods": [
          "POST"
        ],
        "description": "Endpoints for instant-images"
      },
      "matomo/v1": {
        "namespace": "matomo/v1",
        "routes": {
          "/matomo/v1/hit": {
            "namespace": "matomo/v1",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET",
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/hit"
                }
              ]
            }
          },
          "/matomo/v1/api/processed_report": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/processed_report"
                }
              ]
            }
          },
          "/matomo/v1/api/report_metadata": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/report_metadata"
                }
              ]
            }
          },
          "/matomo/v1/api/matomo_version": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/matomo_version"
                }
              ]
            }
          },
          "/matomo/v1/api/metadata": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/metadata"
                }
              ]
            }
          },
          "/matomo/v1/api/segments_metadata": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/segments_metadata"
                }
              ]
            }
          },
          "/matomo/v1/api/widget_metadata": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/widget_metadata"
                }
              ]
            }
          },
          "/matomo/v1/api/row_evolution": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/row_evolution"
                }
              ]
            }
          },
          "/matomo/v1/api/suggested_values_for_segment": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/suggested_values_for_segment"
                }
              ]
            }
          },
          "/matomo/v1/api/settings": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/api/settings"
                }
              ]
            }
          },
          "/matomo/v1/annotations/add": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/annotations/add"
                }
              ]
            }
          },
          "/matomo/v1/annotations/all": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/annotations/all"
                }
              ]
            }
          },
          "/matomo/v1/core_admin_home/invalidate_archived_reports": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/core_admin_home/invalidate_archived_reports"
                }
              ]
            }
          },
          "/matomo/v1/core_admin_home/run_scheduled_tasks": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/core_admin_home/run_scheduled_tasks"
                }
              ]
            }
          },
          "/matomo/v1/core_admin_home/run_cron_archiving": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/core_admin_home/run_cron_archiving"
                }
              ]
            }
          },
          "/matomo/v1/dashboard/dashboards": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/dashboard/dashboards"
                }
              ]
            }
          },
          "/matomo/v1/image_graph/get": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/image_graph/get"
                }
              ]
            }
          },
          "/matomo/v1/visits_summary/visits": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/visits_summary/visits"
                }
              ]
            }
          },
          "/matomo/v1/visits_summary/unique_visitors": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/visits_summary/unique_visitors"
                }
              ]
            }
          },
          "/matomo/v1/languages_manager/available_languages": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/languages_manager/available_languages"
                }
              ]
            }
          },
          "/matomo/v1/languages_manager/available_languages_info": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/languages_manager/available_languages_info"
                }
              ]
            }
          },
          "/matomo/v1/languages_manager/available_language_names": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/languages_manager/available_language_names"
                }
              ]
            }
          },
          "/matomo/v1/languages_manager/language_for_user": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/languages_manager/language_for_user"
                }
              ]
            }
          },
          "/matomo/v1/live/counters": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/live/counters"
                }
              ]
            }
          },
          "/matomo/v1/live/last_visits_details": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/live/last_visits_details"
                }
              ]
            }
          },
          "/matomo/v1/live/visitor_profile": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/live/visitor_profile"
                }
              ]
            }
          },
          "/matomo/v1/live/most_recent_visitor_id": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/live/most_recent_visitor_id"
                }
              ]
            }
          },
          "/matomo/v1/privacy_manager/data_subjects": {
            "namespace": "matomo/v1",
            "methods": [
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/privacy_manager/data_subjects"
                }
              ]
            }
          },
          "/matomo/v1/privacy_manager/export_data_subjects": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/privacy_manager/export_data_subjects"
                }
              ]
            }
          },
          "/matomo/v1/privacy_manager/anonymize_some_raw_data": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/privacy_manager/anonymize_some_raw_data"
                }
              ]
            }
          },
          "/matomo/v1/scheduled_reports/reports": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/scheduled_reports/reports"
                }
              ]
            }
          },
          "/matomo/v1/scheduled_reports/send_report": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/scheduled_reports/send_report"
                }
              ]
            }
          },
          "/matomo/v1/segment_editor/add": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/segment_editor/add"
                }
              ]
            }
          },
          "/matomo/v1/segment_editor/update": {
            "namespace": "matomo/v1",
            "methods": [
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "PUT"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/segment_editor/update"
                }
              ]
            }
          },
          "/matomo/v1/segment_editor/delete": {
            "namespace": "matomo/v1",
            "methods": [
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/segment_editor/delete"
                }
              ]
            }
          },
          "/matomo/v1/segment_editor/get": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/segment_editor/get"
                }
              ]
            }
          },
          "/matomo/v1/segment_editor/all": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/segment_editor/all"
                }
              ]
            }
          },
          "/matomo/v1/sites_manager/all_sites": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/sites_manager/all_sites"
                }
              ]
            }
          },
          "/matomo/v1/sites_manager/all_sites_id": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/sites_manager/all_sites_id"
                }
              ]
            }
          },
          "/matomo/v1/sites_manager/sites_id_with_at_least_view_access": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/sites_manager/sites_id_with_at_least_view_access"
                }
              ]
            }
          },
          "/matomo/v1/users_manager/users": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/users_manager/users"
                }
              ]
            }
          },
          "/matomo/v1/users_manager/users_login": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/users_manager/users_login"
                }
              ]
            }
          },
          "/matomo/v1/users_manager/user": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/users_manager/user"
                }
              ]
            }
          },
          "/matomo/v1/goals/goals": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/goals/goals"
                }
              ]
            }
          },
          "/matomo/v1/visits_summary/get": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/visits_summary/get"
                }
              ]
            }
          },
          "/matomo/v1/goals/goal": {
            "namespace": "matomo/v1",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              },
              {
                "methods": [
                  "POST"
                ],
                "args": []
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": []
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/goals/goal"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_tags": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_tags"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_tag": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_tag"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_triggers": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_triggers"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_trigger": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_trigger"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_variables": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_variables"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_variable": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_variable"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container": {
            "namespace": "matomo/v1",
            "methods": [
              "POST",
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              },
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/containers": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/containers"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_versions": {
            "namespace": "matomo/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_versions"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/container_version": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/container_version"
                }
              ]
            }
          },
          "/matomo/v1/tag_manager/publish_container_version": {
            "namespace": "matomo/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/matomo/v1/tag_manager/publish_container_version"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST",
          "DELETE",
          "PUT"
        ],
        "description": "Endpoints for matomo/v1"
      },
      "performance-lab/v1": {
        "namespace": "performance-lab/v1",
        "routes": {
          "/performance-lab/v1/features/(?P<slug>[a-z0-9_-]+):activate": {
            "namespace": "performance-lab/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "slug": {
                    "type": "string",
                    "description": "Plugin slug of the Performance Lab feature to be activated.",
                    "required": true
                  }
                }
              }
            ]
          },
          "/performance-lab/v1/features/(?P<slug>[a-z0-9_-]+)": {
            "namespace": "performance-lab/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "slug": {
                    "type": "string",
                    "description": "Plugin slug of plugin/feature whose information is needed.",
                    "required": true
                  }
                }
              }
            ]
          }
        },
        "methods": [
          "POST",
          "GET"
        ],
        "description": "Endpoints for performance-lab/v1"
      },
      "convesio-caching/v1": {
        "namespace": "convesio-caching/v1",
        "routes": {
          "/convesio-caching/v1/purge": {
            "namespace": "convesio-caching/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/convesio-caching/v1/purge"
                }
              ]
            }
          }
        },
        "methods": [
          "POST"
        ],
        "description": "Endpoints for convesio-caching/v1"
      },
      "wordfence/v1": {
        "namespace": "wordfence/v1",
        "routes": {
          "/wordfence/v1/authenticate": {
            "namespace": "wordfence/v1",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              },
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/authenticate"
                }
              ]
            }
          },
          "/wordfence/v1/authenticate-premium": {
            "namespace": "wordfence/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/authenticate-premium"
                }
              ]
            }
          },
          "/wordfence/v1/config": {
            "namespace": "wordfence/v1",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/config"
                }
              ]
            }
          },
          "/wordfence/v1/disconnect": {
            "namespace": "wordfence/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/disconnect"
                }
              ]
            }
          },
          "/wordfence/v1/premium-connect": {
            "namespace": "wordfence/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/premium-connect"
                }
              ]
            }
          },
          "/wordfence/v1/scan/issues": {
            "namespace": "wordfence/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/scan/issues"
                }
              ]
            }
          },
          "/wordfence/v1/scan": {
            "namespace": "wordfence/v1",
            "methods": [
              "POST",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/scan"
                }
              ]
            }
          },
          "/wordfence/v1/scan/issue": {
            "namespace": "wordfence/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wordfence/v1/scan/issue"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "description": "Endpoints for wordfence/v1"
      },
      "filebird/v1": {
        "namespace": "filebird/v1",
        "routes": {
          "/filebird/v1/fb-get-old-data": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/fb-get-old-data"
                }
              ]
            }
          },
          "/filebird/v1/fb-insert-old-data": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/fb-insert-old-data"
                }
              ]
            }
          },
          "/filebird/v1/fb-wipe-old-data": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/fb-wipe-old-data"
                }
              ]
            }
          },
          "/filebird/v1/fb-wipe-clear-all-data": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/fb-wipe-clear-all-data"
                }
              ]
            }
          },
          "/filebird/v1/fb-no-thanks": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/fb-no-thanks"
                }
              ]
            }
          },
          "/filebird/v1/get-folders": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/get-folders"
                }
              ]
            }
          },
          "/filebird/v1/gutenberg-get-folders": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/gutenberg-get-folders"
                }
              ]
            }
          },
          "/filebird/v1/new-folder": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/new-folder"
                }
              ]
            }
          },
          "/filebird/v1/update-folder": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/update-folder"
                }
              ]
            }
          },
          "/filebird/v1/update-folder-color": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/update-folder-color"
                }
              ]
            }
          },
          "/filebird/v1/update-folder-ord": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/update-folder-ord"
                }
              ]
            }
          },
          "/filebird/v1/delete-folder": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/delete-folder"
                }
              ]
            }
          },
          "/filebird/v1/assign-folder": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/assign-folder"
                }
              ]
            }
          },
          "/filebird/v1/set-folder-counter": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/set-folder-counter"
                }
              ]
            }
          },
          "/filebird/v1/generate-attachment-size": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/generate-attachment-size"
                }
              ]
            }
          },
          "/filebird/v1/fbv-api": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/fbv-api"
                }
              ]
            }
          },
          "/filebird/v1/set-settings": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/set-settings"
                }
              ]
            }
          },
          "/filebird/v1/set-user-settings": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/set-user-settings"
                }
              ]
            }
          },
          "/filebird/v1/export-csv": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/export-csv"
                }
              ]
            }
          },
          "/filebird/v1/import-csv": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/import-csv"
                }
              ]
            }
          },
          "/filebird/v1/import-csv-detail": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/import-csv-detail"
                }
              ]
            }
          },
          "/filebird/v1/import/get-folders/(?P<prefix>[a-zA-Z]+)": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ]
          },
          "/filebird/v1/import/get-attachments/(?P<prefix>[a-zA-Z]+)": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ]
          },
          "/filebird/v1/import/run/(?P<prefix>[a-zA-Z]+)": {
            "namespace": "filebird/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ]
          },
          "/filebird/v1/gutenberg-get-images": {
            "namespace": "filebird/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/v1/gutenberg-get-images"
                }
              ]
            }
          }
        },
        "methods": [
          "POST",
          "GET"
        ],
        "description": "Endpoints for filebird/v1"
      },
      "filebird/public/v1": {
        "namespace": "filebird/public/v1",
        "routes": {
          "/filebird/public/v1/folders": {
            "namespace": "filebird/public/v1",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              },
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/public/v1/folders"
                }
              ]
            }
          },
          "/filebird/public/v1/folder": {
            "namespace": "filebird/public/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/public/v1/folder"
                }
              ]
            }
          },
          "/filebird/public/v1/folder/set-attachment": {
            "namespace": "filebird/public/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/public/v1/folder/set-attachment"
                }
              ]
            }
          },
          "/filebird/public/v1/attachment-id": {
            "namespace": "filebird/public/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/public/v1/attachment-id"
                }
              ]
            }
          },
          "/filebird/public/v1/attachment-count": {
            "namespace": "filebird/public/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/filebird/public/v1/attachment-count"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST"
        ],
        "description": "Endpoints for filebird/public/v1"
      },
      "generateblocks-pro/v1": {
        "namespace": "generateblocks-pro/v1",
        "routes": {
          "/generateblocks-pro/v1/get_templates": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/get_templates"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/get_template_data": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/get_template_data"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/template-library": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/template-library"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/sync_template_library": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/sync_template_library"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/license": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/license"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/shape-settings": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/shape-settings"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/icon-settings": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/icon-settings"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/export-asset-group": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/export-asset-group"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/categories": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/categories"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/patterns": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/patterns"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/get-global-style-data": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/get-global-style-data"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/provide-global-style-data": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/provide-global-style-data"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/import-styles": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/import-styles"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/get-library-by-public-key": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/get-library-by-public-key"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/pattern-library/add-library": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/add-library"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/global-classes/check_class_name": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/check_class_name"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/global-classes/get": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/get"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/global-classes/get_css": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/get_css"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/global-classes/get_styles": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/get_styles"
                }
              ]
            }
          },
          "/generateblocks-pro/v1/global-styles/update_menu_order": {
            "namespace": "generateblocks-pro/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-styles/update_menu_order"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "description": "Endpoints for generateblocks-pro/v1"
      },
      "generateblocks-pro/advanced-conditions/v1": {
        "namespace": "generateblocks-pro/advanced-conditions/v1",
        "routes": {
          "/generateblocks-pro/advanced-conditions/v1/get_condition_types": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_types"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/get_condition_categories": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_categories"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/manage_category": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/manage_category"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/manage_category/(?P<id>[\\d]+)": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ]
          },
          "/generateblocks-pro/advanced-conditions/v1/get_condition_rules": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "type": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_rules"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/get_condition_operators": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "type": {
                    "type": "string",
                    "required": true
                  },
                  "rule": {
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_operators"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/search_posts": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "post_type": {
                    "type": "string",
                    "required": true
                  },
                  "search": {
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_posts"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/search_terms": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "taxonomy": {
                    "type": "string",
                    "required": true
                  },
                  "search": {
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_terms"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/validate_conditions": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "conditions": {
                    "type": "object",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/validate_conditions"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/get_rule_metadata": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "type": {
                    "type": "string",
                    "required": true
                  },
                  "rule": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_rule_metadata"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/batch_object_titles": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "requests": {
                    "type": "array",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/batch_object_titles"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/conditions": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "page": {
                    "type": "integer",
                    "default": 1,
                    "required": false
                  },
                  "per_page": {
                    "type": "integer",
                    "default": 10,
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "title": {
                    "type": "string",
                    "required": true
                  },
                  "conditions": {
                    "type": "object",
                    "default": {
                      "logic": "OR",
                      "groups": []
                    },
                    "required": false
                  },
                  "status": {
                    "type": "string",
                    "default": "publish",
                    "enum": [
                      "publish",
                      "draft"
                    ],
                    "required": false
                  },
                  "category": {
                    "type": [
                      "array",
                      "string"
                    ],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/conditions"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/conditions/(?P<id>\\d+)": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "type": "integer",
                    "required": true
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "id": {
                    "type": "integer",
                    "required": true
                  },
                  "title": {
                    "type": "string",
                    "required": false
                  },
                  "conditions": {
                    "type": "object",
                    "required": false
                  },
                  "status": {
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "type": "integer",
                    "required": true
                  }
                }
              }
            ]
          },
          "/generateblocks-pro/advanced-conditions/v1/search_hierarchical_posts": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "search": {
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_hierarchical_posts"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/get_day_options": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_day_options"
                }
              ]
            }
          },
          "/generateblocks-pro/advanced-conditions/v1/conditions/(?P<id>\\d+)/usage": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "type": "integer",
                    "required": true
                  },
                  "page": {
                    "type": "integer",
                    "default": 1,
                    "required": false
                  },
                  "per_page": {
                    "type": "integer",
                    "default": 20,
                    "required": false
                  }
                }
              }
            ]
          },
          "/generateblocks-pro/advanced-conditions/v1/search_users": {
            "namespace": "generateblocks-pro/advanced-conditions/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "search": {
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_users"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "description": "Endpoints for generateblocks-pro/advanced-conditions/v1"
      },
      "generateblocks-pro/overlays/v1": {
        "namespace": "generateblocks-pro/overlays/v1",
        "routes": {
          "/generateblocks-pro/overlays/v1/get_modal_categories": {
            "namespace": "generateblocks-pro/overlays/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/overlays/v1/get_modal_categories"
                }
              ]
            }
          },
          "/generateblocks-pro/overlays/v1/manage_category": {
            "namespace": "generateblocks-pro/overlays/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "name": {
                    "type": "string",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/overlays/v1/manage_category"
                }
              ]
            }
          },
          "/generateblocks-pro/overlays/v1/overlays": {
            "namespace": "generateblocks-pro/overlays/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/overlays/v1/overlays"
                }
              ]
            }
          },
          "/generateblocks-pro/overlays/v1/manage_category/(?P<id>\\d+)": {
            "namespace": "generateblocks-pro/overlays/v1",
            "methods": [
              "POST",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "type": "integer",
                    "required": true
                  },
                  "name": {
                    "type": "string",
                    "required": true
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "type": "integer",
                    "required": true
                  }
                }
              }
            ]
          }
        },
        "methods": [
          "GET",
          "POST",
          "DELETE"
        ],
        "description": "Endpoints for generateblocks-pro/overlays/v1"
      },
      "health-check/v1": {
        "namespace": "health-check/v1",
        "routes": {
          "/health-check/v1/plugin-compat": {
            "namespace": "health-check/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/health-check/v1/plugin-compat"
                }
              ]
            }
          }
        },
        "methods": [
          "POST"
        ],
        "description": "Endpoints for health-check/v1"
      },
      "metaslider/v1": {
        "namespace": "metaslider/v1",
        "routes": {
          "/metaslider/v1/slideshow/all": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/all"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/list": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/list"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/single": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/single"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/legacy": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/legacy"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/preview": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/preview"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/save"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/delete": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/delete"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/duplicate": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/duplicate"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/search": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/search"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/export": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/export"
                }
              ]
            }
          },
          "/metaslider/v1/slideshow/import": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/slideshow/import"
                }
              ]
            }
          },
          "/metaslider/v1/themes/all": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/themes/all"
                }
              ]
            }
          },
          "/metaslider/v1/themes/custom": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/themes/custom"
                }
              ]
            }
          },
          "/metaslider/v1/theme/customization": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/theme/customization"
                }
              ]
            }
          },
          "/metaslider/v1/themes/set": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/themes/set"
                }
              ]
            }
          },
          "/metaslider/v1/import/images": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/import/images"
                }
              ]
            }
          },
          "/metaslider/v1/import/others": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/import/others"
                }
              ]
            }
          },
          "/metaslider/v1/tour/status": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/tour/status"
                }
              ]
            }
          },
          "/metaslider/v1/settings/user/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/user/save"
                }
              ]
            }
          },
          "/metaslider/v1/settings/user": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/user"
                }
              ]
            }
          },
          "/metaslider/v1/settings/global/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/global/save"
                }
              ]
            }
          },
          "/metaslider/v1/settings/global/single/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/global/single/save"
                }
              ]
            }
          },
          "/metaslider/v1/settings/single": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/single"
                }
              ]
            }
          },
          "/metaslider/v1/settings/global": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/global"
                }
              ]
            }
          },
          "/metaslider/v1/settings/slideshow/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/slideshow/save"
                }
              ]
            }
          },
          "/metaslider/v1/settings/slideshow/save-single": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/slideshow/save-single"
                }
              ]
            }
          },
          "/metaslider/v1/settings/slideshow/defaults": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/slideshow/defaults"
                }
              ]
            }
          },
          "/metaslider/v1/settings/slideshow/defaults/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/slideshow/defaults/save"
                }
              ]
            }
          },
          "/metaslider/v1/images/ids-from-filenames": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/images/ids-from-filenames"
                }
              ]
            }
          },
          "/metaslider/v1/settings/pro": {
            "namespace": "metaslider/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/pro"
                }
              ]
            }
          },
          "/metaslider/v1/settings/pro/save": {
            "namespace": "metaslider/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/metaslider/v1/settings/pro/save"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST"
        ],
        "description": "Endpoints for metaslider/v1"
      },
      "objectcache/v1": {
        "namespace": "objectcache/v1",
        "routes": {
          "/objectcache/v1/analytics": {
            "namespace": "objectcache/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "raw",
                      "compute"
                    ],
                    "default": "compute",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 30,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "interval": {
                    "description": "The interval in seconds.",
                    "type": "integer",
                    "minimum": 1,
                    "default": 60,
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/objectcache/v1/analytics"
                }
              ]
            }
          },
          "/objectcache/v1/groups": {
            "namespace": "objectcache/v1",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "keys",
                      "bytes"
                    ],
                    "default": "keys",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "group": {
                    "description": "The cache group name.",
                    "type": "string",
                    "required": false
                  },
                  "keys": {
                    "description": "The number of keys in the group.",
                    "type": "integer",
                    "required": false
                  },
                  "count": {
                    "description": "The number of keys in the group.",
                    "type": "integer",
                    "required": false
                  },
                  "bytes": {
                    "description": "The amount of memory used by the group.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/objectcache/v1/groups"
                }
              ]
            }
          },
          "/objectcache/v1/latency": {
            "namespace": "objectcache/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/objectcache/v1/latency"
                }
              ]
            }
          },
          "/objectcache/v1/options": {
            "namespace": "objectcache/v1",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "channel": {
                    "description": "The update channel acts as a \"minimum stability\", meaning that using the Alpha channel will also show the latest Beta releases and so on, whichever has the highest version number. Using an update channel other than Stable may break your site.",
                    "type": "string",
                    "enum": [
                      "stable",
                      "rc",
                      "beta",
                      "alpha",
                      "dev"
                    ],
                    "required": false
                  },
                  "flushlog": {
                    "description": "Whether to keep a log of cache flushes. Ignored when debug mode is enabled.",
                    "type": "boolean",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "channel": {
                    "description": "The update channel acts as a \"minimum stability\", meaning that using the Alpha channel will also show the latest Beta releases and so on, whichever has the highest version number. Using an update channel other than Stable may break your site.",
                    "type": "string",
                    "enum": [
                      "stable",
                      "rc",
                      "beta",
                      "alpha",
                      "dev"
                    ],
                    "required": false
                  },
                  "flushlog": {
                    "description": "Whether to keep a log of cache flushes. Ignored when debug mode is enabled.",
                    "type": "boolean",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/objectcache/v1/options"
                }
              ]
            }
          },
          "/objectcache/v1/relay/adaptive": {
            "namespace": "objectcache/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/objectcache/v1/relay/adaptive"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "DELETE",
          "POST",
          "PUT",
          "PATCH"
        ],
        "description": "Endpoints for objectcache/v1"
      },
      "ultimate-markdown-pro/v1": {
        "namespace": "ultimate-markdown-pro/v1",
        "routes": {
          "/ultimate-markdown-pro/v1/documents": {
            "namespace": "ultimate-markdown-pro/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/ultimate-markdown-pro/v1/documents"
                }
              ]
            }
          },
          "/ultimate-markdown-pro/v1/import": {
            "namespace": "ultimate-markdown-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/ultimate-markdown-pro/v1/import"
                }
              ]
            }
          },
          "/ultimate-markdown-pro/v1/read-options": {
            "namespace": "ultimate-markdown-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/ultimate-markdown-pro/v1/read-options"
                }
              ]
            }
          },
          "/ultimate-markdown-pro/v1/options": {
            "namespace": "ultimate-markdown-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/ultimate-markdown-pro/v1/options"
                }
              ]
            }
          },
          "/ultimate-markdown-pro/v1/export-post": {
            "namespace": "ultimate-markdown-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/ultimate-markdown-pro/v1/export-post"
                }
              ]
            }
          },
          "/ultimate-markdown-pro/v1/parse-markdown": {
            "namespace": "ultimate-markdown-pro/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/ultimate-markdown-pro/v1/parse-markdown"
                }
              ]
            }
          }
        },
        "methods": [
          "GET",
          "POST"
        ],
        "description": "Endpoints for ultimate-markdown-pro/v1"
      },
      "seopress/v1": {
        "namespace": "seopress/v1",
        "routes": {
          "/seopress/v1/posts/(?P<id>\\d+)/content-analysis": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/count-target-keywords-use": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/by-url": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/posts/by-url"
                }
              ]
            }
          },
          "/seopress/v1/terms/(?P<id>\\d+)": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/redirection-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/meta-robot-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/social-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/options/advanced-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/advanced-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/analytics-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/analytics-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/bot-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/bot-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/dashboard-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/dashboard-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/indexing-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/indexing-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/license-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/license-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/pro-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/pro-settings"
                }
              ]
            }
          },
          "/seopress/v1/roles": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/roles"
                }
              ]
            }
          },
          "/seopress/v1/options/sitemaps-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/sitemaps-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/social-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/social-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/titles-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/titles-settings"
                }
              ]
            }
          },
          "/seopress/v1/options/woocommerce-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/options/woocommerce-settings"
                }
              ]
            }
          },
          "/seopress/v1/posts/(?P<id>\\d+)/page-preview": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/preview-title-description-metas": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/search-url": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/search-url"
                }
              ]
            }
          },
          "/seopress/v1/posts/(?P<id>\\d+)/target-keywords": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/title-description-metas": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/ga4": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/ga4"
                }
              ]
            }
          },
          "/seopress/v1/matomo": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/matomo"
                }
              ]
            }
          },
          "/seopress/v1/seo-issues/(?P<id>\\d+)": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/seo-issues": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  },
                  "ignore": {
                    "required": false
                  },
                  "type": {
                    "required": false
                  },
                  "priority": {
                    "required": false
                  },
                  "name": {
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/seo-issues"
                }
              ]
            }
          },
          "/seopress/v1/posts/(?P<id>\\d+)/inspect": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/generate-metas-by-ai": {
            "namespace": "seopress/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/significant-keywords": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/google-news-settings": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/posts/(?P<id>\\d+)/video-sitemap": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          },
          "/seopress/v1/page-speed": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "device": {
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/page-speed"
                }
              ]
            }
          },
          "/seopress/v1/redirections": {
            "namespace": "seopress/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  },
                  "enabled": {
                    "required": false
                  },
                  "type": {
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/seopress/v1/redirections"
                }
              ]
            }
          },
          "/seopress/v1/posts/(?P<id>\\d+)/schemas-manual": {
            "namespace": "seopress/v1",
            "methods": [
              "GET",
              "PUT"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "PUT"
                ],
                "args": {
                  "id": {
                    "required": false
                  }
                }
              }
            ]
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT"
        ],
        "description": "Endpoints for seopress/v1"
      },
      "generatepress/v1": {
        "namespace": "generatepress/v1",
        "routes": {
          "/generatepress/v1/reset": {
            "namespace": "generatepress/v1",
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/generatepress/v1/reset"
                }
              ]
            }
          }
        },
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "description": "Endpoints for generatepress/v1"
      },
      "font-awesome/v1": {
        "namespace": "font-awesome/v1",
        "routes": {
          "/font-awesome/v1/api": {
            "namespace": "font-awesome/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/api"
                }
              ]
            }
          },
          "/font-awesome/v1/api/token": {
            "namespace": "font-awesome/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/api/token"
                }
              ]
            }
          },
          "/font-awesome/v1/config": {
            "namespace": "font-awesome/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/config"
                }
              ]
            }
          },
          "/font-awesome/v1/preference-check": {
            "namespace": "font-awesome/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/preference-check"
                }
              ]
            }
          },
          "/font-awesome/v1/conflict-detection/until": {
            "namespace": "font-awesome/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/conflict-detection/until"
                }
              ]
            }
          },
          "/font-awesome/v1/conflict-detection/conflicts": {
            "namespace": "font-awesome/v1",
            "methods": [
              "POST",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/conflict-detection/conflicts"
                }
              ]
            }
          },
          "/font-awesome/v1/conflict-detection/conflicts/blocklist": {
            "namespace": "font-awesome/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/font-awesome/v1/conflict-detection/conflicts/blocklist"
                }
              ]
            }
          }
        },
        "methods": [
          "POST",
          "GET",
          "DELETE"
        ],
        "description": "Endpoints for font-awesome/v1"
      },
      "optimization-detective/v1": {
        "namespace": "optimization-detective/v1",
        "routes": {
          "/optimization-detective/v1/url-metrics:store": {
            "namespace": "optimization-detective/v1",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "slug": {
                    "type": "string",
                    "description": "An MD5 hash of the query args.",
                    "pattern": "^[0-9a-f]{32}\\z",
                    "minLength": 32,
                    "maxLength": 32,
                    "required": true
                  },
                  "current_etag": {
                    "type": "string",
                    "description": "ETag for the current environment.",
                    "pattern": "^[0-9a-f]{32}\\z",
                    "minLength": 32,
                    "maxLength": 32,
                    "required": true
                  },
                  "cache_purge_post_id": {
                    "type": "integer",
                    "description": "Cache purge post ID.",
                    "minimum": 1,
                    "required": false
                  },
                  "hmac": {
                    "type": "string",
                    "description": "HMAC originally computed by server required to authorize the request.",
                    "pattern": "^[0-9a-f]+\\z",
                    "required": true
                  },
                  "url": {
                    "description": "The URL for which the metric was obtained.",
                    "type": "string",
                    "format": "uri",
                    "pattern": "^https?://",
                    "required": true
                  },
                  "viewport": {
                    "description": "Viewport dimensions",
                    "type": "object",
                    "properties": {
                      "width": {
                        "type": "integer",
                        "required": true,
                        "minimum": 1
                      },
                      "height": {
                        "type": "integer",
                        "required": true,
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false,
                    "required": true
                  },
                  "elements": {
                    "description": "Element metrics",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": true,
                      "properties": {
                        "isLCP": {
                          "type": "boolean",
                          "required": true
                        },
                        "isLCPCandidate": {
                          "type": "boolean",
                          "required": true
                        },
                        "xpath": {
                          "type": "string",
                          "required": true,
                          "pattern": "^(/([a-zA-Z0-9:_-]+|\\*\\[\\d+\\]\\[self::[a-zA-Z0-9:_-]+\\])(\\[@(id|role|class)='[a-zA-Z0-9_.\\s:-]*'\\])?)+$"
                        },
                        "intersectionRatio": {
                          "type": "number",
                          "required": true,
                          "minimum": 0,
                          "maximum": 1
                        },
                        "intersectionRect": {
                          "type": "object",
                          "required": true,
                          "properties": {
                            "width": {
                              "type": "number",
                              "required": true,
                              "minimum": 0
                            },
                            "height": {
                              "type": "number",
                              "required": true,
                              "minimum": 0
                            },
                            "x": {
                              "type": "number",
                              "required": true
                            },
                            "y": {
                              "type": "number",
                              "required": true
                            },
                            "top": {
                              "type": "number",
                              "required": true
                            },
                            "right": {
                              "type": "number",
                              "required": true
                            },
                            "bottom": {
                              "type": "number",
                              "required": true
                            },
                            "left": {
                              "type": "number",
                              "required": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "boundingClientRect": {
                          "type": "object",
                          "required": true,
                          "properties": {
                            "width": {
                              "type": "number",
                              "required": true,
                              "minimum": 0
                            },
                            "height": {
                              "type": "number",
                              "required": true,
                              "minimum": 0
                            },
                            "x": {
                              "type": "number",
                              "required": true
                            },
                            "y": {
                              "type": "number",
                              "required": true
                            },
                            "top": {
                              "type": "number",
                              "required": true
                            },
                            "right": {
                              "type": "number",
                              "required": true
                            },
                            "bottom": {
                              "type": "number",
                              "required": true
                            },
                            "left": {
                              "type": "number",
                              "required": true
                            }
                          },
                          "additionalProperties": false
                        },
                        "resizedBoundingClientRect": {
                          "type": "object",
                          "properties": {
                            "width": {
                              "type": "number",
                              "required": true
                            },
                            "height": {
                              "type": "number",
                              "required": true
                            },
                            "x": {
                              "type": "number",
                              "required": true
                            },
                            "y": {
                              "type": "number",
                              "required": true
                            },
                            "top": {
                              "type": "number",
                              "required": true
                            },
                            "right": {
                              "type": "number",
                              "required": true
                            },
                            "bottom": {
                              "type": "number",
                              "required": true
                            },
                            "left": {
                              "type": "number",
                              "required": true
                            }
                          },
                          "required": false,
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/optimization-detective/v1/url-metrics:store"
                }
              ]
            }
          }
        },
        "methods": [
          "POST"
        ],
        "description": "Endpoints for optimization-detective/v1"
      },
      "wp/v2": {
        "namespace": "wp/v2",
        "routes": {
          "/wp/v2/posts": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "author": {
                    "description": "Limit result set to posts assigned to specific authors.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "author_exclude": {
                    "description": "Ensure result set excludes posts assigned to specific authors.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "tax_relation": {
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "type": "string",
                    "enum": [
                      "AND",
                      "OR"
                    ],
                    "required": false
                  },
                  "categories": {
                    "description": "Limit result set to items with specific terms assigned in the categories taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "include_children": {
                            "description": "Whether to include child terms in the terms limiting the result set.",
                            "type": "boolean",
                            "default": false
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "categories_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the categories taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "include_children": {
                            "description": "Whether to include child terms in the terms limiting the result set.",
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "tags": {
                    "description": "Limit result set to items with specific terms assigned in the tags taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "tags_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the tags taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "sticky": {
                    "description": "Limit result set to items that are sticky.",
                    "type": "boolean",
                    "required": false
                  },
                  "ignore_sticky": {
                    "description": "Whether to ignore sticky posts or not.",
                    "type": "boolean",
                    "default": true,
                    "required": false
                  },
                  "format": {
                    "description": "Limit result set to items assigned one or more given formats.",
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "enum": [
                        "standard",
                        "aside",
                        "chat",
                        "gallery",
                        "link",
                        "image",
                        "quote",
                        "status",
                        "video",
                        "audio"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "format": {
                    "description": "The format for the post.",
                    "type": "string",
                    "enum": [
                      "standard",
                      "aside",
                      "chat",
                      "gallery",
                      "link",
                      "image",
                      "quote",
                      "status",
                      "video",
                      "audio"
                    ],
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "sticky": {
                    "description": "Whether or not the post should be treated as sticky.",
                    "type": "boolean",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "categories": {
                    "description": "The terms assigned to the post in the category taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "tags": {
                    "description": "The terms assigned to the post in the post_tag taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/posts"
                }
              ]
            }
          },
          "/wp/v2/posts/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "excerpt_length": {
                    "description": "Override the default excerpt length.",
                    "type": "integer",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "format": {
                    "description": "The format for the post.",
                    "type": "string",
                    "enum": [
                      "standard",
                      "aside",
                      "chat",
                      "gallery",
                      "link",
                      "image",
                      "quote",
                      "status",
                      "video",
                      "audio"
                    ],
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "sticky": {
                    "description": "Whether or not the post should be treated as sticky.",
                    "type": "boolean",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "categories": {
                    "description": "The terms assigned to the post in the category taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "tags": {
                    "description": "The terms assigned to the post in the post_tag taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/posts/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/posts/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/posts/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "format": {
                    "description": "The format for the post.",
                    "type": "string",
                    "enum": [
                      "standard",
                      "aside",
                      "chat",
                      "gallery",
                      "link",
                      "image",
                      "quote",
                      "status",
                      "video",
                      "audio"
                    ],
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "sticky": {
                    "description": "Whether or not the post should be treated as sticky.",
                    "type": "boolean",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "categories": {
                    "description": "The terms assigned to the post in the category taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "tags": {
                    "description": "The terms assigned to the post in the post_tag taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/posts/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/pages": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "author": {
                    "description": "Limit result set to posts assigned to specific authors.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "author_exclude": {
                    "description": "Ensure result set excludes posts assigned to specific authors.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "menu_order": {
                    "description": "Limit result set to posts with a specific menu_order value.",
                    "type": "integer",
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title",
                      "menu_order"
                    ],
                    "required": false
                  },
                  "parent": {
                    "description": "Limit result set to items with particular parent IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "parent_exclude": {
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The ID for the parent of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/pages"
                }
              ]
            }
          },
          "/wp/v2/pages/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "excerpt_length": {
                    "description": "Override the default excerpt length.",
                    "type": "integer",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The ID for the parent of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/pages/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/pages/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/pages/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/pages/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/media": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "author": {
                    "description": "Limit result set to posts assigned to specific authors.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "author_exclude": {
                    "description": "Ensure result set excludes posts assigned to specific authors.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "parent": {
                    "description": "Limit result set to items with particular parent IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "parent_exclude": {
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "inherit",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "inherit",
                        "private",
                        "trash"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "media_type": {
                    "default": null,
                    "description": "Limit result set to attachments of a particular media type.",
                    "type": "string",
                    "enum": [
                      "image",
                      "video",
                      "text",
                      "application",
                      "audio"
                    ],
                    "required": false
                  },
                  "mime_type": {
                    "default": null,
                    "description": "Limit result set to attachments of a particular MIME type.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "media_tag": {
                    "description": "Media Categories",
                    "type": "array",
                    "required": false
                  },
                  "alt_text": {
                    "description": "Alternative text to display when attachment is not displayed.",
                    "type": "string",
                    "required": false
                  },
                  "caption": {
                    "description": "The attachment caption.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Caption for the attachment, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML caption for the attachment, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "description": "The attachment description.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Description for the attachment, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML description for the attachment, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "post": {
                    "description": "The ID for the associated post of the attachment.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/media"
                }
              ]
            }
          },
          "/wp/v2/media/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "comment_status": {
                    "description": "Whether or not comments are open on the post.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "ping_status": {
                    "description": "Whether or not the post can be pinged.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "media_tag": {
                    "description": "Media Categories",
                    "type": "array",
                    "required": false
                  },
                  "alt_text": {
                    "description": "Alternative text to display when attachment is not displayed.",
                    "type": "string",
                    "required": false
                  },
                  "caption": {
                    "description": "The attachment caption.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Caption for the attachment, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML caption for the attachment, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "description": "The attachment description.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Description for the attachment, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML description for the attachment, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "post": {
                    "description": "The ID for the associated post of the attachment.",
                    "type": "integer",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/media/(?P<id>[\\d]+)/post-process": {
            "namespace": "wp/v2",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the attachment.",
                    "type": "integer",
                    "required": false
                  },
                  "action": {
                    "type": "string",
                    "enum": [
                      "create-image-subsizes"
                    ],
                    "required": true
                  }
                }
              }
            ]
          },
          "/wp/v2/media/(?P<id>[\\d]+)/edit": {
            "namespace": "wp/v2",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "src": {
                    "description": "URL to the edited image file.",
                    "type": "string",
                    "format": "uri",
                    "required": true
                  },
                  "modifiers": {
                    "description": "Array of image edits.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "description": "Image edit.",
                      "type": "object",
                      "required": [
                        "type",
                        "args"
                      ],
                      "oneOf": [
                        {
                          "title": "Rotation",
                          "properties": {
                            "type": {
                              "description": "Rotation type.",
                              "type": "string",
                              "enum": [
                                "rotate"
                              ]
                            },
                            "args": {
                              "description": "Rotation arguments.",
                              "type": "object",
                              "required": [
                                "angle"
                              ],
                              "properties": {
                                "angle": {
                                  "description": "Angle to rotate clockwise in degrees.",
                                  "type": "number"
                                }
                              }
                            }
                          }
                        },
                        {
                          "title": "Crop",
                          "properties": {
                            "type": {
                              "description": "Crop type.",
                              "type": "string",
                              "enum": [
                                "crop"
                              ]
                            },
                            "args": {
                              "description": "Crop arguments.",
                              "type": "object",
                              "required": [
                                "left",
                                "top",
                                "width",
                                "height"
                              ],
                              "properties": {
                                "left": {
                                  "description": "Horizontal position from the left to begin the crop as a percentage of the image width.",
                                  "type": "number"
                                },
                                "top": {
                                  "description": "Vertical position from the top to begin the crop as a percentage of the image height.",
                                  "type": "number"
                                },
                                "width": {
                                  "description": "Width of the crop as a percentage of the image width.",
                                  "type": "number"
                                },
                                "height": {
                                  "description": "Height of the crop as a percentage of the image height.",
                                  "type": "number"
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "required": false
                  },
                  "rotation": {
                    "description": "The amount to rotate the image clockwise in degrees. DEPRECATED: Use `modifiers` instead.",
                    "type": "integer",
                    "minimum": 0,
                    "exclusiveMinimum": true,
                    "maximum": 360,
                    "exclusiveMaximum": true,
                    "required": false
                  },
                  "x": {
                    "description": "As a percentage of the image, the x position to start the crop from. DEPRECATED: Use `modifiers` instead.",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "required": false
                  },
                  "y": {
                    "description": "As a percentage of the image, the y position to start the crop from. DEPRECATED: Use `modifiers` instead.",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "required": false
                  },
                  "width": {
                    "description": "As a percentage of the image, the width to crop the image to. DEPRECATED: Use `modifiers` instead.",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "required": false
                  },
                  "height": {
                    "description": "As a percentage of the image, the height to crop the image to. DEPRECATED: Use `modifiers` instead.",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100,
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/menu-items": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "menu_order",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title",
                      "menu_order"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "tax_relation": {
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "type": "string",
                    "enum": [
                      "AND",
                      "OR"
                    ],
                    "required": false
                  },
                  "menus": {
                    "description": "Limit result set to items with specific terms assigned in the menus taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "menus_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the menus taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "menu_order": {
                    "description": "Limit result set to posts with a specific menu_order value.",
                    "type": "integer",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "title": {
                    "description": "The title for the object.",
                    "type": [
                      "string",
                      "object"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the object, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the object, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "type": {
                    "default": "custom",
                    "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                    "type": "string",
                    "enum": [
                      "taxonomy",
                      "post_type",
                      "post_type_archive",
                      "custom"
                    ],
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "A named status for the object.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "parent": {
                    "default": 0,
                    "description": "The ID for the parent of the object.",
                    "type": "integer",
                    "minimum": 0,
                    "required": false
                  },
                  "attr_title": {
                    "description": "Text for the title attribute of the link element for this menu item.",
                    "type": "string",
                    "required": false
                  },
                  "classes": {
                    "description": "Class names for the link element of this menu item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "description": {
                    "description": "The description of this menu item.",
                    "type": "string",
                    "required": false
                  },
                  "menu_order": {
                    "default": 1,
                    "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                    "type": "integer",
                    "minimum": 1,
                    "required": false
                  },
                  "object": {
                    "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                    "type": "string",
                    "required": false
                  },
                  "object_id": {
                    "default": 0,
                    "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                    "type": "integer",
                    "minimum": 0,
                    "required": false
                  },
                  "target": {
                    "description": "The target attribute of the link element for this menu item.",
                    "type": "string",
                    "enum": [
                      "_blank",
                      ""
                    ],
                    "required": false
                  },
                  "url": {
                    "description": "The URL to which this menu item points.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "xfn": {
                    "description": "The XFN relationship expressed in the link of this menu item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "menus": {
                    "description": "The terms assigned to the object in the nav_menu taxonomy.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_mega_menu": {
                        "type": "number",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_gb_mega_menu_anchor": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/menu-items"
                }
              ]
            }
          },
          "/wp/v2/menu-items/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the object.",
                    "type": [
                      "string",
                      "object"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the object, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the object, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "type": {
                    "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                    "type": "string",
                    "enum": [
                      "taxonomy",
                      "post_type",
                      "post_type_archive",
                      "custom"
                    ],
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the object.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "parent": {
                    "description": "The ID for the parent of the object.",
                    "type": "integer",
                    "minimum": 0,
                    "required": false
                  },
                  "attr_title": {
                    "description": "Text for the title attribute of the link element for this menu item.",
                    "type": "string",
                    "required": false
                  },
                  "classes": {
                    "description": "Class names for the link element of this menu item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "description": {
                    "description": "The description of this menu item.",
                    "type": "string",
                    "required": false
                  },
                  "menu_order": {
                    "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                    "type": "integer",
                    "minimum": 1,
                    "required": false
                  },
                  "object": {
                    "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                    "type": "string",
                    "required": false
                  },
                  "object_id": {
                    "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                    "type": "integer",
                    "minimum": 0,
                    "required": false
                  },
                  "target": {
                    "description": "The target attribute of the link element for this menu item.",
                    "type": "string",
                    "enum": [
                      "_blank",
                      ""
                    ],
                    "required": false
                  },
                  "url": {
                    "description": "The URL to which this menu item points.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "xfn": {
                    "description": "The XFN relationship expressed in the link of this menu item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "menus": {
                    "description": "The terms assigned to the object in the nav_menu taxonomy.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_mega_menu": {
                        "type": "number",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_gb_mega_menu_anchor": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/menu-items/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the object.",
                    "type": "integer",
                    "minimum": 0,
                    "required": false
                  },
                  "title": {
                    "description": "The title for the object.",
                    "type": [
                      "string",
                      "object"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the object, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the object, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "type": {
                    "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
                    "type": "string",
                    "enum": [
                      "taxonomy",
                      "post_type",
                      "post_type_archive",
                      "custom"
                    ],
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the object.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "attr_title": {
                    "description": "Text for the title attribute of the link element for this menu item.",
                    "type": "string",
                    "required": false
                  },
                  "classes": {
                    "description": "Class names for the link element of this menu item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "description": {
                    "description": "The description of this menu item.",
                    "type": "string",
                    "required": false
                  },
                  "menu_order": {
                    "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
                    "type": "integer",
                    "minimum": 1,
                    "required": false
                  },
                  "object": {
                    "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
                    "type": "string",
                    "required": false
                  },
                  "object_id": {
                    "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
                    "type": "integer",
                    "minimum": 0,
                    "required": false
                  },
                  "target": {
                    "description": "The target attribute of the link element for this menu item.",
                    "type": "string",
                    "enum": [
                      "_blank",
                      ""
                    ],
                    "required": false
                  },
                  "url": {
                    "description": "The URL to which this menu item points.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "xfn": {
                    "description": "The XFN relationship expressed in the link of this menu item.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "menus": {
                    "description": "The terms assigned to the object in the nav_menu taxonomy.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_mega_menu": {
                        "type": "number",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_gb_mega_menu_anchor": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/menu-items/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/blocks": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "tax_relation": {
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "type": "string",
                    "enum": [
                      "AND",
                      "OR"
                    ],
                    "required": false
                  },
                  "wp_pattern_category": {
                    "description": "Limit result set to items with specific terms assigned in the wp_pattern_category taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "wp_pattern_category_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the wp_pattern_category taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "gblocks_pattern_collections": {
                    "description": "Limit result set to items with specific terms assigned in the gblocks_pattern_collections taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "gblocks_pattern_collections_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the gblocks_pattern_collections taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "wp_pattern_sync_status": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "",
                        "enum": [
                          "partial",
                          "unsynced"
                        ]
                      },
                      "_editor_width": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "wp_pattern_category": {
                    "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "gblocks_pattern_collections": {
                    "description": "The terms assigned to the post in the gblocks_pattern_collections taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/blocks"
                }
              ]
            }
          },
          "/wp/v2/blocks/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "excerpt_length": {
                    "description": "Override the default excerpt length.",
                    "type": "integer",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "wp_pattern_sync_status": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "",
                        "enum": [
                          "partial",
                          "unsynced"
                        ]
                      },
                      "_editor_width": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "wp_pattern_category": {
                    "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "gblocks_pattern_collections": {
                    "description": "The terms assigned to the post in the gblocks_pattern_collections taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/blocks/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/blocks/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/blocks/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "wp_pattern_sync_status": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "",
                        "enum": [
                          "partial",
                          "unsynced"
                        ]
                      },
                      "_editor_width": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "wp_pattern_category": {
                    "description": "The terms assigned to the post in the wp_pattern_category taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "gblocks_pattern_collections": {
                    "description": "The terms assigned to the post in the gblocks_pattern_collections taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/blocks/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/templates/(?P<parent>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/templates/(?P<parent>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/templates/(?P<id>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "Unique slug identifying the template.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_\\%-]+",
                    "required": false
                  },
                  "theme": {
                    "description": "Theme identifier for the template.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "description": "Type of template.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "description": "Content of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Content for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the template.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "title": {
                    "description": "Title of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the template, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "description": "Description of template.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "Status of template.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the template.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/templates/(?P<parent>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/templates": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "wp_id": {
                    "description": "Limit to the specified post id.",
                    "type": "integer",
                    "required": false
                  },
                  "area": {
                    "description": "Limit to the specified template part area.",
                    "type": "string",
                    "required": false
                  },
                  "post_type": {
                    "description": "Post type to get the templates for.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "slug": {
                    "description": "Unique slug identifying the template.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_\\%-]+",
                    "required": true
                  },
                  "theme": {
                    "description": "Theme identifier for the template.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "description": "Type of template.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "default": "",
                    "description": "Content of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Content for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the template.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "title": {
                    "default": "",
                    "description": "Title of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the template, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "default": "",
                    "description": "Description of template.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Status of template.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the template.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/templates"
                }
              ]
            }
          },
          "/wp/v2/templates/lookup": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "slug": {
                    "description": "The slug of the template to get the fallback for",
                    "type": "string",
                    "required": true
                  },
                  "is_custom": {
                    "description": "Indicates if a template is custom or part of the template hierarchy",
                    "type": "boolean",
                    "required": false
                  },
                  "template_prefix": {
                    "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/templates/lookup"
                }
              ]
            }
          },
          "/wp/v2/templates/(?P<id>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "Unique slug identifying the template.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_\\%-]+",
                    "required": false
                  },
                  "theme": {
                    "description": "Theme identifier for the template.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "description": "Type of template.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "description": "Content of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Content for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the template.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "title": {
                    "description": "Title of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the template, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "description": "Description of template.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "Status of template.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the template.",
                    "type": "integer",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/template-parts/(?P<parent>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/template-parts/(?P<parent>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/template-parts/(?P<id>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "Unique slug identifying the template.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_\\%-]+",
                    "required": false
                  },
                  "theme": {
                    "description": "Theme identifier for the template.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "description": "Type of template.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "description": "Content of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Content for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the template.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "title": {
                    "description": "Title of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the template, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "description": "Description of template.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "Status of template.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the template.",
                    "type": "integer",
                    "required": false
                  },
                  "area": {
                    "description": "Where the template part is intended for use (header, footer, etc.)",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/template-parts/(?P<parent>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/template-parts": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "wp_id": {
                    "description": "Limit to the specified post id.",
                    "type": "integer",
                    "required": false
                  },
                  "area": {
                    "description": "Limit to the specified template part area.",
                    "type": "string",
                    "required": false
                  },
                  "post_type": {
                    "description": "Post type to get the templates for.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "slug": {
                    "description": "Unique slug identifying the template.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_\\%-]+",
                    "required": true
                  },
                  "theme": {
                    "description": "Theme identifier for the template.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "description": "Type of template.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "default": "",
                    "description": "Content of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Content for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the template.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "title": {
                    "default": "",
                    "description": "Title of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the template, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "default": "",
                    "description": "Description of template.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Status of template.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the template.",
                    "type": "integer",
                    "required": false
                  },
                  "area": {
                    "description": "Where the template part is intended for use (header, footer, etc.)",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/template-parts"
                }
              ]
            }
          },
          "/wp/v2/template-parts/lookup": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "slug": {
                    "description": "The slug of the template to get the fallback for",
                    "type": "string",
                    "required": true
                  },
                  "is_custom": {
                    "description": "Indicates if a template is custom or part of the template hierarchy",
                    "type": "boolean",
                    "required": false
                  },
                  "template_prefix": {
                    "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/template-parts/lookup"
                }
              ]
            }
          },
          "/wp/v2/template-parts/(?P<id>([^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)[\\/\\w%-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "Unique slug identifying the template.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": "[a-zA-Z0-9_\\%-]+",
                    "required": false
                  },
                  "theme": {
                    "description": "Theme identifier for the template.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "description": "Type of template.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "description": "Content of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Content for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ]
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the template.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "title": {
                    "description": "Title of template.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the template, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the template, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "description": {
                    "description": "Description of template.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "Status of template.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "author": {
                    "description": "The ID for the author of the template.",
                    "type": "integer",
                    "required": false
                  },
                  "area": {
                    "description": "Where the template part is intended for use (header, footer, etc.)",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/global-styles/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/global-styles/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the global styles revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the global styles revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/global-styles/themes/(?P<stylesheet>[\\/\\s%\\w\\.\\(\\)\\[\\]\\@_\\-]+)/variations": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": false
                },
                "args": {
                  "stylesheet": {
                    "description": "The theme identifier",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/global-styles/themes/(?P<stylesheet>[^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": false
                },
                "args": {
                  "stylesheet": {
                    "description": "The theme identifier",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/global-styles/(?P<id>[\\/\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": false
                },
                "args": {
                  "id": {
                    "description": "The id of a template",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": false
                },
                "args": {
                  "styles": {
                    "description": "Global styles.",
                    "type": [
                      "object"
                    ],
                    "required": false
                  },
                  "settings": {
                    "description": "Global settings.",
                    "type": [
                      "object"
                    ],
                    "required": false
                  },
                  "title": {
                    "description": "Title of the global styles variation.",
                    "type": [
                      "object",
                      "string"
                    ],
                    "properties": {
                      "raw": {
                        "description": "Title for the global styles variation, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/navigation": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/navigation"
                }
              ]
            }
          },
          "/wp/v2/navigation/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/navigation/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/navigation/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/navigation/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit",
                          "embed"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/navigation/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/font-families": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "id",
                    "enum": [
                      "id",
                      "include"
                    ],
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "theme_json_version": {
                    "description": "Version of the theme.json schema used for the typography settings.",
                    "type": "integer",
                    "default": 3,
                    "minimum": 2,
                    "maximum": 3,
                    "required": false
                  },
                  "font_family_settings": {
                    "description": "font-family declaration in theme.json format, encoded as a string.",
                    "type": "string",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/font-families"
                }
              ]
            }
          },
          "/wp/v2/font-families/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "theme_json_version": {
                    "description": "Version of the theme.json schema used for the typography settings.",
                    "type": "integer",
                    "default": 3,
                    "minimum": 2,
                    "maximum": 3,
                    "required": false
                  },
                  "font_family_settings": {
                    "description": "font-family declaration in theme.json format, encoded as a string.",
                    "type": "string",
                    "required": true
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/font-families/(?P<font_family_id>[\\d]+)/font-faces": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "font_family_id": {
                    "description": "The ID for the parent font family of the font face.",
                    "type": "integer",
                    "required": true
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "id",
                    "enum": [
                      "id",
                      "include"
                    ],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "font_family_id": {
                    "description": "The ID for the parent font family of the font face.",
                    "type": "integer",
                    "required": true
                  },
                  "theme_json_version": {
                    "description": "Version of the theme.json schema used for the typography settings.",
                    "type": "integer",
                    "default": 3,
                    "minimum": 2,
                    "maximum": 3,
                    "required": false
                  },
                  "font_face_settings": {
                    "description": "font-face declaration in theme.json format, encoded as a string.",
                    "type": "string",
                    "required": true
                  }
                }
              }
            ]
          },
          "/wp/v2/font-families/(?P<font_family_id>[\\d]+)/font-faces/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "font_family_id": {
                    "description": "The ID for the parent font family of the font face.",
                    "type": "integer",
                    "required": true
                  },
                  "id": {
                    "description": "Unique identifier for the font face.",
                    "type": "integer",
                    "required": true
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "font_family_id": {
                    "description": "The ID for the parent font family of the font face.",
                    "type": "integer",
                    "required": true
                  },
                  "id": {
                    "description": "Unique identifier for the font face.",
                    "type": "integer",
                    "required": true
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gp_elements": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "menu_order": {
                    "description": "Limit result set to posts with a specific menu_order value.",
                    "type": "integer",
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title",
                      "menu_order"
                    ],
                    "required": false
                  },
                  "parent": {
                    "description": "Limit result set to items with particular parent IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "parent_exclude": {
                    "description": "Limit result set to all items except those of a particular parent ID.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The ID for the parent of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_element_editor_width": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_element_editor_width_unit": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_hook": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_custom_hook": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_hook_priority": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_meta_location": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_tagname": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_disable_primary_post_meta": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_secondary_post_meta": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_title": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_featured_image": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_use_theme_post_container": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_use_archive_navigation_container": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_post_navigation": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_archive_navigation": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_post_loop_item_display": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_tax": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_term": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_post_meta": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gp_elements"
                }
              ]
            }
          },
          "/wp/v2/gp_elements/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The ID for the parent of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_element_editor_width": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_element_editor_width_unit": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_hook": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_custom_hook": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_hook_priority": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_meta_location": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_tagname": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_disable_primary_post_meta": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_secondary_post_meta": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_title": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_featured_image": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_use_theme_post_container": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_use_archive_navigation_container": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_post_navigation": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_archive_navigation": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_post_loop_item_display": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_tax": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_term": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_post_meta": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gp_elements/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gp_elements/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gp_elements/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_element_editor_width": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_element_editor_width_unit": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_block_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_hook": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_custom_hook": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_hook_priority": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_meta_location": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_tagname": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_disable_primary_post_meta": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_secondary_post_meta": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_title": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_featured_image": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_use_theme_post_container": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_use_archive_navigation_container": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_post_navigation": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_disable_archive_navigation": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_generate_post_loop_item_display": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_tax": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_term": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_generate_post_loop_item_display_post_meta": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gp_elements/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gp_font": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gp_font"
                }
              ]
            }
          },
          "/wp/v2/gp_font/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/persona": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/persona"
                }
              ]
            }
          },
          "/wp/v2/persona/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "excerpt_length": {
                    "description": "Override the default excerpt length.",
                    "type": "integer",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/persona/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "excerpt": {
                    "description": "The excerpt for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Excerpt for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML excerpt for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the excerpt is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/persona/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_templates": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gblocks_templates"
                }
              ]
            }
          },
          "/wp/v2/gblocks_templates/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_templates/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "featured_media": {
                    "description": "The ID of the featured media for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_templates/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_styles": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "menu_order": {
                    "description": "Limit result set to posts with a specific menu_order value.",
                    "type": "integer",
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title",
                      "menu_order"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "gb_style_selector": {
                    "type": "string",
                    "required": false
                  },
                  "gb_style_css": {
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gblocks_styles"
                }
              ]
            }
          },
          "/wp/v2/gblocks_styles/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "menu_order": {
                    "description": "The order of the post in relation to other posts.",
                    "type": "integer",
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "gb_style_selector": {
                    "type": "string",
                    "required": false
                  },
                  "gb_style_css": {
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks-conditions": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "tax_relation": {
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "type": "string",
                    "enum": [
                      "AND",
                      "OR"
                    ],
                    "required": false
                  },
                  "condition-categories": {
                    "description": "Limit result set to items with specific terms assigned in the condition-categories taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "include_children": {
                            "description": "Whether to include child terms in the terms limiting the result set.",
                            "type": "boolean",
                            "default": false
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "condition-categories_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the condition-categories taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "include_children": {
                            "description": "Whether to include child terms in the terms limiting the result set.",
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "condition-categories": {
                    "description": "The terms assigned to the post in the gblocks_condition_cat taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "gbConditions": {
                    "type": "object",
                    "properties": {
                      "logic": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "logic": {
                              "type": "string",
                              "enum": [
                                "AND",
                                "OR"
                              ]
                            },
                            "conditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "rule": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gblocks-conditions"
                }
              ]
            }
          },
          "/wp/v2/gblocks-conditions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "condition-categories": {
                    "description": "The terms assigned to the post in the gblocks_condition_cat taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "gbConditions": {
                    "type": "object",
                    "properties": {
                      "logic": {
                        "type": "string",
                        "enum": [
                          "AND",
                          "OR"
                        ]
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "logic": {
                              "type": "string",
                              "enum": [
                                "AND",
                                "OR"
                              ]
                            },
                            "conditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string"
                                  },
                                  "rule": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_overlay": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 200,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to posts published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_after": {
                    "description": "Limit response to posts modified after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to posts published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "modified_before": {
                    "description": "Limit response to posts modified before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "search_semantics": {
                    "description": "How to interpret the search input.",
                    "type": "string",
                    "enum": [
                      "exact"
                    ],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post_title",
                        "post_content",
                        "post_excerpt"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to posts with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "publish",
                    "description": "Limit result set to posts assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "publish",
                        "future",
                        "draft",
                        "pending",
                        "private",
                        "trash",
                        "auto-draft",
                        "inherit",
                        "request-pending",
                        "request-confirmed",
                        "request-failed",
                        "request-completed",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "tax_relation": {
                    "description": "Limit result set based on relationship between multiple taxonomies.",
                    "type": "string",
                    "enum": [
                      "AND",
                      "OR"
                    ],
                    "required": false
                  },
                  "overlay-categories": {
                    "description": "Limit result set to items with specific terms assigned in the overlay-categories taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "include_children": {
                            "description": "Whether to include child terms in the terms limiting the result set.",
                            "type": "boolean",
                            "default": false
                          },
                          "operator": {
                            "description": "Whether items must be assigned all or any of the specified terms.",
                            "type": "string",
                            "enum": [
                              "AND",
                              "OR"
                            ],
                            "default": "OR"
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  },
                  "overlay-categories_exclude": {
                    "description": "Limit result set to items except those with specific terms assigned in the overlay-categories taxonomy.",
                    "type": [
                      "object",
                      "array"
                    ],
                    "oneOf": [
                      {
                        "title": "Term ID List",
                        "description": "Match terms with the listed IDs.",
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      {
                        "title": "Term ID Taxonomy Query",
                        "description": "Perform an advanced term query.",
                        "type": "object",
                        "properties": {
                          "terms": {
                            "description": "Term IDs.",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            },
                            "default": []
                          },
                          "include_children": {
                            "description": "Whether to include child terms in the terms limiting the result set.",
                            "type": "boolean",
                            "default": false
                          }
                        },
                        "additionalProperties": false
                      }
                    ],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_display_condition": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_display_condition_invert": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_trigger_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "click"
                      },
                      "_gb_overlay_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "standard"
                      },
                      "_gb_overlay_placement": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "bottom-start"
                      },
                      "_gb_overlay_backdrop": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_backdrop_color": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "rgba(0, 0, 0, 0.5)"
                      },
                      "_gb_overlay_backdrop_blur": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_in": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_out": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_duration": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_target": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_distance": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_scroll_percent": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_time_delay": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_cookie_duration": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_close_on_esc": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_close_on_click_outside": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_disable_page_scroll": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_position": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "center"
                      },
                      "_gb_overlay_custom_event": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_hide_if_cookies_disabled": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_position_to_parent": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_hover_buffer": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "20"
                      },
                      "_gb_overlay_width_mode": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "overlay-categories": {
                    "description": "The terms assigned to the post in the gblocks_overlay_cat taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "admin_edit_url": {
                    "description": "Admin URL to edit the post.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "trigger_info": {
                    "description": "Overlay trigger information for block editor.",
                    "type": "object",
                    "properties": {
                      "trigger_type": {
                        "type": "string",
                        "enum": [
                          "click",
                          "hover",
                          "both"
                        ]
                      },
                      "is_interactive": {
                        "type": "boolean"
                      }
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gblocks_overlay"
                }
              ]
            }
          },
          "/wp/v2/gblocks_overlay/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_display_condition": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_display_condition_invert": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_trigger_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "click"
                      },
                      "_gb_overlay_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "standard"
                      },
                      "_gb_overlay_placement": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "bottom-start"
                      },
                      "_gb_overlay_backdrop": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_backdrop_color": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "rgba(0, 0, 0, 0.5)"
                      },
                      "_gb_overlay_backdrop_blur": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_in": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_out": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_duration": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_target": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_distance": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_scroll_percent": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_time_delay": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_cookie_duration": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_close_on_esc": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_close_on_click_outside": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_disable_page_scroll": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_position": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "center"
                      },
                      "_gb_overlay_custom_event": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_hide_if_cookies_disabled": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_position_to_parent": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_hover_buffer": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "20"
                      },
                      "_gb_overlay_width_mode": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "overlay-categories": {
                    "description": "The terms assigned to the post in the gblocks_overlay_cat taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "admin_edit_url": {
                    "description": "Admin URL to edit the post.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "trigger_info": {
                    "description": "Overlay trigger information for block editor.",
                    "type": "object",
                    "properties": {
                      "trigger_type": {
                        "type": "string",
                        "enum": [
                          "click",
                          "hover",
                          "both"
                        ]
                      },
                      "is_interactive": {
                        "type": "boolean"
                      }
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the post.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_overlay/(?P<parent>[\\d]+)/revisions": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by object attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "date",
                      "id",
                      "include",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title"
                    ],
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_overlay/(?P<parent>[\\d]+)/revisions/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "Unique identifier for the revision.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as revisions do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_overlay/(?P<id>[\\d]+)/autosaves": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "date": {
                    "description": "The date the post was published, in the site's timezone.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the post was published, as GMT.",
                    "type": [
                      "string",
                      "null"
                    ],
                    "format": "date-time",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the post unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "A named status for the post.",
                    "type": "string",
                    "enum": [
                      "publish",
                      "future",
                      "draft",
                      "pending",
                      "private"
                    ],
                    "required": false
                  },
                  "password": {
                    "description": "A password to protect access to the content and excerpt.",
                    "type": "string",
                    "required": false
                  },
                  "title": {
                    "description": "The title for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Title for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML title for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "content": {
                    "description": "The content for the post.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the post, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the post, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit"
                        ],
                        "readonly": true
                      },
                      "block_version": {
                        "description": "Version of the content block format used by the post.",
                        "type": "integer",
                        "context": [
                          "edit"
                        ],
                        "readonly": true
                      },
                      "protected": {
                        "description": "Whether the content is protected with a password.",
                        "type": "boolean",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "_seopress_robots_primary_cat": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_title": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_titles_desc": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_seopress_robots_index": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_import_markdown_pro_load_document_selector": {
                        "type": "integer",
                        "title": "",
                        "description": "",
                        "default": 0
                      },
                      "_import_markdown_pro_submit_text_textarea": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_display_condition": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_display_condition_invert": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_trigger_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "click"
                      },
                      "_gb_overlay_type": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "standard"
                      },
                      "_gb_overlay_placement": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "bottom-start"
                      },
                      "_gb_overlay_backdrop": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_backdrop_color": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "rgba(0, 0, 0, 0.5)"
                      },
                      "_gb_overlay_backdrop_blur": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_in": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_out": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_duration": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_target": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_animation_distance": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_scroll_percent": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_time_delay": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_cookie_duration": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_close_on_esc": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_close_on_click_outside": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": true
                      },
                      "_gb_overlay_disable_page_scroll": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_position": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "center"
                      },
                      "_gb_overlay_custom_event": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_hide_if_cookies_disabled": {
                        "type": "boolean",
                        "title": "",
                        "description": "",
                        "default": false
                      },
                      "_gb_overlay_position_to_parent": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "_gb_overlay_hover_buffer": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": "20"
                      },
                      "_gb_overlay_width_mode": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      },
                      "footnotes": {
                        "type": "string",
                        "title": "",
                        "description": "",
                        "default": ""
                      }
                    },
                    "required": false
                  },
                  "template": {
                    "description": "The theme file to use to display the post.",
                    "type": "string",
                    "required": false
                  },
                  "overlay-categories": {
                    "description": "The terms assigned to the post in the gblocks_overlay_cat taxonomy.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "admin_edit_url": {
                    "description": "Admin URL to edit the post.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "trigger_info": {
                    "description": "Overlay trigger information for block editor.",
                    "type": "object",
                    "properties": {
                      "trigger_type": {
                        "type": "string",
                        "enum": [
                          "click",
                          "hover",
                          "both"
                        ]
                      },
                      "is_interactive": {
                        "type": "boolean"
                      }
                    },
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_overlay/(?P<parent>[\\d]+)/autosaves/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "parent": {
                    "description": "The ID for the parent of the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "id": {
                    "description": "The ID for the autosave.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/types": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/types"
                }
              ]
            }
          },
          "/wp/v2/types/(?P<type>[\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "type": {
                    "description": "An alphanumeric identifier for the post type.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/statuses": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/statuses"
                }
              ]
            }
          },
          "/wp/v2/statuses/(?P<status>[\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "status": {
                    "description": "An alphanumeric identifier for the status.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/taxonomies": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "type": {
                    "description": "Limit results to taxonomies associated with a specific post type.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/taxonomies"
                }
              ]
            }
          },
          "/wp/v2/taxonomies/(?P<taxonomy>[\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "taxonomy": {
                    "description": "An alphanumeric identifier for the taxonomy.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/categories": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "parent": {
                    "description": "Limit result set to terms assigned to a specific parent.",
                    "type": "integer",
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The parent term ID.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/categories"
                }
              ]
            }
          },
          "/wp/v2/categories/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The parent term ID.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/tags": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/tags"
                }
              ]
            }
          },
          "/wp/v2/tags/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/menus": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  },
                  "locations": {
                    "description": "The locations assigned to the menu.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "auto_add": {
                    "description": "Whether to automatically add top level pages to this menu.",
                    "type": "boolean",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/menus"
                }
              ]
            }
          },
          "/wp/v2/menus/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  },
                  "locations": {
                    "description": "The locations assigned to the menu.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "auto_add": {
                    "description": "Whether to automatically add top level pages to this menu.",
                    "type": "boolean",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/wp_pattern_category": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/wp_pattern_category"
                }
              ]
            }
          },
          "/wp/v2/wp_pattern_category/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/gblocks_pattern_collections": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/gblocks_pattern_collections"
                }
              ]
            }
          },
          "/wp/v2/gblocks_pattern_collections/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/condition-categories": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "parent": {
                    "description": "Limit result set to terms assigned to a specific parent.",
                    "type": "integer",
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The parent term ID.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/condition-categories"
                }
              ]
            }
          },
          "/wp/v2/condition-categories/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The parent term ID.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/overlay-categories": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "asc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by term attribute.",
                    "type": "string",
                    "default": "name",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "slug",
                      "include_slugs",
                      "term_group",
                      "description",
                      "count"
                    ],
                    "required": false
                  },
                  "hide_empty": {
                    "description": "Whether to hide terms not assigned to any posts.",
                    "type": "boolean",
                    "default": false,
                    "required": false
                  },
                  "parent": {
                    "description": "Limit result set to terms assigned to a specific parent.",
                    "type": "integer",
                    "required": false
                  },
                  "post": {
                    "description": "Limit result set to terms assigned to a specific post.",
                    "type": "integer",
                    "default": null,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to terms with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": true
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The parent term ID.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/overlay-categories"
                }
              ]
            }
          },
          "/wp/v2/overlay-categories/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "description": {
                    "description": "HTML description of the term.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "HTML title for the term.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the term unique to its type.",
                    "type": "string",
                    "required": false
                  },
                  "parent": {
                    "description": "The parent term ID.",
                    "type": "integer",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the term.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as terms do not support trashing.",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/users": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "default": "asc",
                    "description": "Order sort attribute ascending or descending.",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "type": "string",
                    "required": false
                  },
                  "orderby": {
                    "default": "name",
                    "description": "Sort collection by user attribute.",
                    "enum": [
                      "id",
                      "include",
                      "name",
                      "registered_date",
                      "slug",
                      "include_slugs",
                      "email",
                      "url"
                    ],
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "Limit result set to users with one or more specific slugs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "roles": {
                    "description": "Limit result set to users matching at least one specific role provided. Accepts csv list or single role.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "capabilities": {
                    "description": "Limit result set to users matching at least one specific capability provided. Accepts csv list or single capability.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "who": {
                    "description": "Limit result set to users who are considered authors.",
                    "type": "string",
                    "enum": [
                      "authors"
                    ],
                    "required": false
                  },
                  "has_published_posts": {
                    "description": "Limit result set to users who have published posts.",
                    "type": [
                      "boolean",
                      "array"
                    ],
                    "items": {
                      "type": "string",
                      "enum": {
                        "post": "post",
                        "page": "page",
                        "attachment": "attachment",
                        "nav_menu_item": "nav_menu_item",
                        "wp_block": "wp_block",
                        "wp_template": "wp_template",
                        "wp_template_part": "wp_template_part",
                        "wp_global_styles": "wp_global_styles",
                        "wp_navigation": "wp_navigation",
                        "wp_font_family": "wp_font_family",
                        "wp_font_face": "wp_font_face",
                        "gp_elements": "gp_elements",
                        "gp_font": "gp_font",
                        "persona": "persona",
                        "gblocks_templates": "gblocks_templates",
                        "gblocks_styles": "gblocks_styles",
                        "gblocks_condition": "gblocks_condition",
                        "gblocks_overlay": "gblocks_overlay"
                      }
                    },
                    "required": false
                  },
                  "search_columns": {
                    "default": [],
                    "description": "Array of column names to be searched.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "email",
                        "name",
                        "id",
                        "username",
                        "slug"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "username": {
                    "description": "Login name for the user.",
                    "type": "string",
                    "required": true
                  },
                  "name": {
                    "description": "Display name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "first_name": {
                    "description": "First name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "last_name": {
                    "description": "Last name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "email": {
                    "description": "The email address for the user.",
                    "type": "string",
                    "format": "email",
                    "required": true
                  },
                  "url": {
                    "description": "URL of the user.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "description": {
                    "description": "Description of the user.",
                    "type": "string",
                    "required": false
                  },
                  "locale": {
                    "description": "Locale for the user.",
                    "type": "string",
                    "enum": [
                      "",
                      "en_US"
                    ],
                    "required": false
                  },
                  "nickname": {
                    "description": "The nickname for the user.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the user.",
                    "type": "string",
                    "required": false
                  },
                  "roles": {
                    "description": "Roles assigned to the user.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "password": {
                    "description": "Password for the user (never included).",
                    "type": "string",
                    "required": true
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "persisted_preferences": {
                        "type": "object",
                        "title": "",
                        "description": "",
                        "default": [],
                        "context": [
                          "edit"
                        ],
                        "properties": {
                          "_modified": {
                            "description": "The date and time the preferences were updated.",
                            "type": "string",
                            "format": "date-time",
                            "readonly": false
                          }
                        },
                        "additionalProperties": true
                      },
                      "generateblocks_onboarding": {
                        "type": "object",
                        "title": "",
                        "description": "",
                        "default": [],
                        "properties": {
                          "insert_inner_container": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/users"
                }
              ]
            }
          },
          "/wp/v2/users/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the user.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the user.",
                    "type": "integer",
                    "required": false
                  },
                  "username": {
                    "description": "Login name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "Display name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "first_name": {
                    "description": "First name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "last_name": {
                    "description": "Last name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "email": {
                    "description": "The email address for the user.",
                    "type": "string",
                    "format": "email",
                    "required": false
                  },
                  "url": {
                    "description": "URL of the user.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "description": {
                    "description": "Description of the user.",
                    "type": "string",
                    "required": false
                  },
                  "locale": {
                    "description": "Locale for the user.",
                    "type": "string",
                    "enum": [
                      "",
                      "en_US"
                    ],
                    "required": false
                  },
                  "nickname": {
                    "description": "The nickname for the user.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the user.",
                    "type": "string",
                    "required": false
                  },
                  "roles": {
                    "description": "Roles assigned to the user.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "password": {
                    "description": "Password for the user (never included).",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "persisted_preferences": {
                        "type": "object",
                        "title": "",
                        "description": "",
                        "default": [],
                        "context": [
                          "edit"
                        ],
                        "properties": {
                          "_modified": {
                            "description": "The date and time the preferences were updated.",
                            "type": "string",
                            "format": "date-time",
                            "readonly": false
                          }
                        },
                        "additionalProperties": true
                      },
                      "generateblocks_onboarding": {
                        "type": "object",
                        "title": "",
                        "description": "",
                        "default": [],
                        "properties": {
                          "insert_inner_container": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the user.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as users do not support trashing.",
                    "required": false
                  },
                  "reassign": {
                    "type": "integer",
                    "description": "Reassign the deleted user's posts and links to this user ID.",
                    "required": true
                  }
                }
              }
            ]
          },
          "/wp/v2/users/me": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "username": {
                    "description": "Login name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "name": {
                    "description": "Display name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "first_name": {
                    "description": "First name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "last_name": {
                    "description": "Last name for the user.",
                    "type": "string",
                    "required": false
                  },
                  "email": {
                    "description": "The email address for the user.",
                    "type": "string",
                    "format": "email",
                    "required": false
                  },
                  "url": {
                    "description": "URL of the user.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "description": {
                    "description": "Description of the user.",
                    "type": "string",
                    "required": false
                  },
                  "locale": {
                    "description": "Locale for the user.",
                    "type": "string",
                    "enum": [
                      "",
                      "en_US"
                    ],
                    "required": false
                  },
                  "nickname": {
                    "description": "The nickname for the user.",
                    "type": "string",
                    "required": false
                  },
                  "slug": {
                    "description": "An alphanumeric identifier for the user.",
                    "type": "string",
                    "required": false
                  },
                  "roles": {
                    "description": "Roles assigned to the user.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "required": false
                  },
                  "password": {
                    "description": "Password for the user (never included).",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": {
                      "persisted_preferences": {
                        "type": "object",
                        "title": "",
                        "description": "",
                        "default": [],
                        "context": [
                          "edit"
                        ],
                        "properties": {
                          "_modified": {
                            "description": "The date and time the preferences were updated.",
                            "type": "string",
                            "format": "date-time",
                            "readonly": false
                          }
                        },
                        "additionalProperties": true
                      },
                      "generateblocks_onboarding": {
                        "type": "object",
                        "title": "",
                        "description": "",
                        "default": [],
                        "properties": {
                          "insert_inner_container": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": {
                          "type": "boolean"
                        }
                      }
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Required to be true, as users do not support trashing.",
                    "required": false
                  },
                  "reassign": {
                    "type": "integer",
                    "description": "Reassign the deleted user's posts and links to this user ID.",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/users/me"
                }
              ]
            }
          },
          "/wp/v2/users/(?P<user_id>(?:[\\d]+|me))/application-passwords": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "app_id": {
                    "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                    "type": "string",
                    "format": "uuid",
                    "required": false
                  },
                  "name": {
                    "description": "The name of the application password.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": ".*\\S.*",
                    "required": true
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ]
          },
          "/wp/v2/users/(?P<user_id>(?:[\\d]+|me))/application-passwords/introspect": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/users/(?P<user_id>(?:[\\d]+|me))/application-passwords/(?P<uuid>[\\w\\-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "app_id": {
                    "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
                    "type": "string",
                    "format": "uuid",
                    "required": false
                  },
                  "name": {
                    "description": "The name of the application password.",
                    "type": "string",
                    "minLength": 1,
                    "pattern": ".*\\S.*",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": []
              }
            ]
          },
          "/wp/v2/comments": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "after": {
                    "description": "Limit response to comments published after a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "author": {
                    "description": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "author_exclude": {
                    "description": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "author_email": {
                    "default": null,
                    "description": "Limit result set to that from a specific author email. Requires authorization.",
                    "format": "email",
                    "type": "string",
                    "required": false
                  },
                  "before": {
                    "description": "Limit response to comments published before a given ISO8601 compliant date.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by comment attribute.",
                    "type": "string",
                    "default": "date_gmt",
                    "enum": [
                      "date",
                      "date_gmt",
                      "id",
                      "include",
                      "post",
                      "parent",
                      "type"
                    ],
                    "required": false
                  },
                  "parent": {
                    "default": [],
                    "description": "Limit result set to comments of specific parent IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "parent_exclude": {
                    "default": [],
                    "description": "Ensure result set excludes specific parent IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "post": {
                    "default": [],
                    "description": "Limit result set to comments assigned to specific post IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "required": false
                  },
                  "status": {
                    "default": "approve",
                    "description": "Limit result set to comments assigned a specific status. Requires authorization.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "default": "comment",
                    "description": "Limit result set to comments assigned a specific type. Requires authorization.",
                    "type": "string",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the post if it is password protected.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "author": {
                    "description": "The ID of the user object, if author was a user.",
                    "type": "integer",
                    "required": false
                  },
                  "author_email": {
                    "description": "Email address for the comment author.",
                    "type": "string",
                    "format": "email",
                    "required": false
                  },
                  "author_ip": {
                    "description": "IP address for the comment author.",
                    "type": "string",
                    "format": "ip",
                    "required": false
                  },
                  "author_name": {
                    "description": "Display name for the comment author.",
                    "type": "string",
                    "required": false
                  },
                  "author_url": {
                    "description": "URL for the comment author.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "author_user_agent": {
                    "description": "User agent for the comment author.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "description": "The content for the comment.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the comment, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the comment, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "date": {
                    "description": "The date the comment was published, in the site's timezone.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the comment was published, as GMT.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "parent": {
                    "default": 0,
                    "description": "The ID for the parent of the comment.",
                    "type": "integer",
                    "required": false
                  },
                  "post": {
                    "default": 0,
                    "description": "The ID of the associated post object.",
                    "type": "integer",
                    "required": false
                  },
                  "status": {
                    "description": "State of the comment.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/comments"
                }
              ]
            }
          },
          "/wp/v2/comments/(?P<id>[\\d]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the comment.",
                    "type": "integer",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the parent post of the comment (if the post is password protected).",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the comment.",
                    "type": "integer",
                    "required": false
                  },
                  "author": {
                    "description": "The ID of the user object, if author was a user.",
                    "type": "integer",
                    "required": false
                  },
                  "author_email": {
                    "description": "Email address for the comment author.",
                    "type": "string",
                    "format": "email",
                    "required": false
                  },
                  "author_ip": {
                    "description": "IP address for the comment author.",
                    "type": "string",
                    "format": "ip",
                    "required": false
                  },
                  "author_name": {
                    "description": "Display name for the comment author.",
                    "type": "string",
                    "required": false
                  },
                  "author_url": {
                    "description": "URL for the comment author.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "author_user_agent": {
                    "description": "User agent for the comment author.",
                    "type": "string",
                    "required": false
                  },
                  "content": {
                    "description": "The content for the comment.",
                    "type": "object",
                    "properties": {
                      "raw": {
                        "description": "Content for the comment, as it exists in the database.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "rendered": {
                        "description": "HTML content for the comment, transformed for display.",
                        "type": "string",
                        "context": [
                          "view",
                          "edit",
                          "embed"
                        ],
                        "readonly": true
                      }
                    },
                    "required": false
                  },
                  "date": {
                    "description": "The date the comment was published, in the site's timezone.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "date_gmt": {
                    "description": "The date the comment was published, as GMT.",
                    "type": "string",
                    "format": "date-time",
                    "required": false
                  },
                  "parent": {
                    "description": "The ID for the parent of the comment.",
                    "type": "integer",
                    "required": false
                  },
                  "post": {
                    "description": "The ID of the associated post object.",
                    "type": "integer",
                    "required": false
                  },
                  "status": {
                    "description": "State of the comment.",
                    "type": "string",
                    "required": false
                  },
                  "meta": {
                    "description": "Meta fields.",
                    "type": "object",
                    "properties": [],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "id": {
                    "description": "Unique identifier for the comment.",
                    "type": "integer",
                    "required": false
                  },
                  "force": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to bypass Trash and force deletion.",
                    "required": false
                  },
                  "password": {
                    "description": "The password for the parent post of the comment (if the post is password protected).",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/search": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "type": {
                    "default": "post",
                    "description": "Limit results to items of an object type.",
                    "type": "string",
                    "enum": [
                      "post",
                      "term",
                      "post-format"
                    ],
                    "required": false
                  },
                  "subtype": {
                    "default": "any",
                    "description": "Limit results to items of one or more object subtypes.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "post",
                        "page",
                        "persona",
                        "category",
                        "post_tag",
                        "gblocks_pattern_collections",
                        "any"
                      ],
                      "type": "string"
                    },
                    "required": false
                  },
                  "exclude": {
                    "description": "Ensure result set excludes specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  },
                  "include": {
                    "description": "Limit result set to specific IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "default": [],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/search"
                }
              ]
            }
          },
          "/wp/v2/block-renderer/(?P<name>[a-z0-9-]+/[a-z0-9-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET",
                  "POST"
                ],
                "args": {
                  "name": {
                    "description": "Unique registered name for the block.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "attributes": {
                    "description": "Attributes for the block.",
                    "type": "object",
                    "default": [],
                    "required": false
                  },
                  "post_id": {
                    "description": "ID of the post context.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/block-types": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "namespace": {
                    "description": "Block namespace.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/block-types"
                }
              ]
            }
          },
          "/wp/v2/block-types/(?P<namespace>[a-zA-Z0-9_-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "namespace": {
                    "description": "Block namespace.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/block-types/(?P<namespace>[a-zA-Z0-9_-]+)/(?P<name>[a-zA-Z0-9_-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "name": {
                    "description": "Block name.",
                    "type": "string",
                    "required": false
                  },
                  "namespace": {
                    "description": "Block namespace.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/settings": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "generateblocks_pro_classic_menu_support": {
                    "title": "",
                    "description": "",
                    "type": "boolean",
                    "required": false
                  },
                  "plsr_speculation_rules": {
                    "title": "",
                    "description": "Configuration for the Speculation Rules API.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "Prerendering will lead to faster load times than prefetching. However, in case of interactive content, prefetching may be a safer choice.",
                        "type": "string",
                        "enum": [
                          "prefetch",
                          "prerender"
                        ]
                      },
                      "eagerness": {
                        "description": "The eagerness setting defines the heuristics based on which the loading is triggered. \"Eager\" will have the minimum delay to start speculative loads, \"Conservative\" increases the chance that only URLs the user actually navigates to are loaded.",
                        "type": "string",
                        "enum": [
                          "conservative",
                          "moderate",
                          "eager"
                        ]
                      },
                      "authentication": {
                        "description": "Only unauthenticated pages are typically served from cache. So in order to reduce load on the server, speculative loading is not enabled by default for logged-in users. If your server can handle the additional load, you can opt in to speculative loading for all logged-in users or just administrator users only. For optimal performance, regardless of the user authentication status but especially when logged-in, ensure you have a persistent object cache configured. This only applies to pages on the frontend; admin screens remain excluded.",
                        "type": "string",
                        "enum": [
                          "logged_out",
                          "logged_out_and_admins",
                          "any"
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "required": false
                  },
                  "title": {
                    "title": "Title",
                    "description": "Site title.",
                    "type": "string",
                    "required": false
                  },
                  "description": {
                    "title": "Tagline",
                    "description": "Site tagline.",
                    "type": "string",
                    "required": false
                  },
                  "url": {
                    "title": "",
                    "description": "Site URL.",
                    "type": "string",
                    "format": "uri",
                    "required": false
                  },
                  "email": {
                    "title": "",
                    "description": "This address is used for admin purposes, like new user notification.",
                    "type": "string",
                    "format": "email",
                    "required": false
                  },
                  "timezone": {
                    "title": "",
                    "description": "A city in the same timezone as you.",
                    "type": "string",
                    "required": false
                  },
                  "date_format": {
                    "title": "",
                    "description": "A date format for all date strings.",
                    "type": "string",
                    "required": false
                  },
                  "time_format": {
                    "title": "",
                    "description": "A time format for all time strings.",
                    "type": "string",
                    "required": false
                  },
                  "start_of_week": {
                    "title": "",
                    "description": "A day number of the week that the week should start on.",
                    "type": "integer",
                    "required": false
                  },
                  "language": {
                    "title": "",
                    "description": "WordPress locale code.",
                    "type": "string",
                    "required": false
                  },
                  "use_smilies": {
                    "title": "",
                    "description": "Convert emoticons like :-) and :-P to graphics on display.",
                    "type": "boolean",
                    "required": false
                  },
                  "default_category": {
                    "title": "",
                    "description": "Default post category.",
                    "type": "integer",
                    "required": false
                  },
                  "default_post_format": {
                    "title": "",
                    "description": "Default post format.",
                    "type": "string",
                    "required": false
                  },
                  "posts_per_page": {
                    "title": "Maximum posts per page",
                    "description": "Blog pages show at most.",
                    "type": "integer",
                    "required": false
                  },
                  "show_on_front": {
                    "title": "Show on front",
                    "description": "What to show on the front page",
                    "type": "string",
                    "required": false
                  },
                  "page_on_front": {
                    "title": "Page on front",
                    "description": "The ID of the page that should be displayed on the front page",
                    "type": "integer",
                    "required": false
                  },
                  "page_for_posts": {
                    "title": "",
                    "description": "The ID of the page that should display the latest posts",
                    "type": "integer",
                    "required": false
                  },
                  "default_ping_status": {
                    "title": "",
                    "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "default_comment_status": {
                    "title": "Allow comments on new posts",
                    "description": "Allow people to submit comments on new posts.",
                    "type": "string",
                    "enum": [
                      "open",
                      "closed"
                    ],
                    "required": false
                  },
                  "site_logo": {
                    "title": "Logo",
                    "description": "Site logo.",
                    "type": "integer",
                    "required": false
                  },
                  "site_icon": {
                    "title": "Icon",
                    "description": "Site icon.",
                    "type": "integer",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/settings"
                }
              ]
            }
          },
          "/wp/v2/themes": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "status": {
                    "description": "Limit result set to themes assigned one or more statuses.",
                    "type": "array",
                    "items": {
                      "enum": [
                        "active",
                        "inactive"
                      ],
                      "type": "string"
                    },
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/themes"
                }
              ]
            }
          },
          "/wp/v2/themes/(?P<stylesheet>[^\\/:<>\\*\\?\"\\|]+(?:\\/[^\\/:<>\\*\\?\"\\|]+)?)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "stylesheet": {
                    "description": "The theme's stylesheet. This uniquely identifies the theme.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/plugins": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "required": false
                  },
                  "status": {
                    "description": "Limits results to plugins with the given status.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "inactive",
                        "active"
                      ]
                    },
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "slug": {
                    "type": "string",
                    "description": "WordPress.org plugin directory slug.",
                    "pattern": "[\\w\\-]+",
                    "required": true
                  },
                  "status": {
                    "description": "The plugin activation status.",
                    "type": "string",
                    "enum": [
                      "inactive",
                      "active"
                    ],
                    "default": "inactive",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/plugins"
                }
              ]
            }
          },
          "/wp/v2/plugins/(?P<plugin>[^.\\/]+(?:\\/[^.\\/]+)?)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "plugin": {
                    "type": "string",
                    "pattern": "[^.\\/]+(?:\\/[^.\\/]+)?",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "plugin": {
                    "type": "string",
                    "pattern": "[^.\\/]+(?:\\/[^.\\/]+)?",
                    "required": false
                  },
                  "status": {
                    "description": "The plugin activation status.",
                    "type": "string",
                    "enum": [
                      "inactive",
                      "active"
                    ],
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "plugin": {
                    "type": "string",
                    "pattern": "[^.\\/]+(?:\\/[^.\\/]+)?",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/sidebars": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/sidebars"
                }
              ]
            }
          },
          "/wp/v2/sidebars/(?P<id>[\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "The id of a registered sidebar",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "args": {
                  "widgets": {
                    "description": "Nested widgets.",
                    "type": "array",
                    "items": {
                      "type": [
                        "object",
                        "string"
                      ]
                    },
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/widget-types": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/widget-types"
                }
              ]
            }
          },
          "/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "id": {
                    "description": "The widget type id.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)/encode": {
            "namespace": "wp/v2",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "description": "The widget type id.",
                    "type": "string",
                    "required": true
                  },
                  "instance": {
                    "description": "Current instance settings of the widget.",
                    "type": "object",
                    "required": false
                  },
                  "form_data": {
                    "description": "Serialized widget form data to encode into instance settings.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/widget-types/(?P<id>[a-zA-Z0-9_-]+)/render": {
            "namespace": "wp/v2",
            "methods": [
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "POST"
                ],
                "args": {
                  "id": {
                    "description": "The widget type id.",
                    "type": "string",
                    "required": true
                  },
                  "instance": {
                    "description": "Current instance settings of the widget.",
                    "type": "object",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/widgets": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "sidebar": {
                    "description": "The sidebar to return widgets for.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the widget.",
                    "type": "string",
                    "required": false
                  },
                  "id_base": {
                    "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                    "type": "string",
                    "required": false
                  },
                  "sidebar": {
                    "default": "wp_inactive_widgets",
                    "description": "The sidebar the widget belongs to.",
                    "type": "string",
                    "required": true
                  },
                  "instance": {
                    "description": "Instance settings of the widget, if supported.",
                    "type": "object",
                    "properties": {
                      "encoded": {
                        "description": "Base64 encoded representation of the instance settings.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "hash": {
                        "description": "Cryptographic hash of the instance settings.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "raw": {
                        "description": "Unencoded instance settings, if supported.",
                        "type": "object",
                        "context": [
                          "edit"
                        ]
                      }
                    },
                    "required": false
                  },
                  "form_data": {
                    "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                    "type": "string",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/widgets"
                }
              ]
            }
          },
          "/wp/v2/widgets/(?P<id>[\\w\\-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET",
              "POST",
              "PUT",
              "PATCH",
              "DELETE"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "POST",
                  "PUT",
                  "PATCH"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "id": {
                    "description": "Unique identifier for the widget.",
                    "type": "string",
                    "required": false
                  },
                  "id_base": {
                    "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
                    "type": "string",
                    "required": false
                  },
                  "sidebar": {
                    "description": "The sidebar the widget belongs to.",
                    "type": "string",
                    "required": false
                  },
                  "instance": {
                    "description": "Instance settings of the widget, if supported.",
                    "type": "object",
                    "properties": {
                      "encoded": {
                        "description": "Base64 encoded representation of the instance settings.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "hash": {
                        "description": "Cryptographic hash of the instance settings.",
                        "type": "string",
                        "context": [
                          "edit"
                        ]
                      },
                      "raw": {
                        "description": "Unencoded instance settings, if supported.",
                        "type": "object",
                        "context": [
                          "edit"
                        ]
                      }
                    },
                    "required": false
                  },
                  "form_data": {
                    "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
                    "type": "string",
                    "required": false
                  }
                }
              },
              {
                "methods": [
                  "DELETE"
                ],
                "allow_batch": {
                  "v1": true
                },
                "args": {
                  "force": {
                    "description": "Whether to force removal of the widget, or move it to the inactive sidebar.",
                    "type": "boolean",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/block-directory/search": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "term": {
                    "description": "Limit result set to blocks matching the search term.",
                    "type": "string",
                    "minLength": 1,
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/block-directory/search"
                }
              ]
            }
          },
          "/wp/v2/pattern-directory/patterns": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 100,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  },
                  "search": {
                    "description": "Limit results to those matching a string.",
                    "type": "string",
                    "minLength": 1,
                    "required": false
                  },
                  "category": {
                    "description": "Limit results to those matching a category ID.",
                    "type": "integer",
                    "minimum": 1,
                    "required": false
                  },
                  "keyword": {
                    "description": "Limit results to those matching a keyword ID.",
                    "type": "integer",
                    "minimum": 1,
                    "required": false
                  },
                  "slug": {
                    "description": "Limit results to those matching a pattern (slug).",
                    "type": "array",
                    "required": false
                  },
                  "offset": {
                    "description": "Offset the result set by a specific number of items.",
                    "type": "integer",
                    "required": false
                  },
                  "order": {
                    "description": "Order sort attribute ascending or descending.",
                    "type": "string",
                    "default": "desc",
                    "enum": [
                      "asc",
                      "desc"
                    ],
                    "required": false
                  },
                  "orderby": {
                    "description": "Sort collection by post attribute.",
                    "type": "string",
                    "default": "date",
                    "enum": [
                      "author",
                      "date",
                      "id",
                      "include",
                      "modified",
                      "parent",
                      "relevance",
                      "slug",
                      "include_slugs",
                      "title",
                      "favorite_count"
                    ],
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/pattern-directory/patterns"
                }
              ]
            }
          },
          "/wp/v2/block-patterns/patterns": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/block-patterns/patterns"
                }
              ]
            }
          },
          "/wp/v2/block-patterns/categories": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/block-patterns/categories"
                }
              ]
            }
          },
          "/wp/v2/menu-locations": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/menu-locations"
                }
              ]
            }
          },
          "/wp/v2/menu-locations/(?P<location>[\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "location": {
                    "description": "An alphanumeric identifier for the menu location.",
                    "type": "string",
                    "required": false
                  },
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          },
          "/wp/v2/font-collections": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  },
                  "page": {
                    "description": "Current page of the collection.",
                    "type": "integer",
                    "default": 1,
                    "minimum": 1,
                    "required": false
                  },
                  "per_page": {
                    "description": "Maximum number of items to be returned in result set.",
                    "type": "integer",
                    "default": 10,
                    "minimum": 1,
                    "maximum": 100,
                    "required": false
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp/v2/font-collections"
                }
              ]
            }
          },
          "/wp/v2/font-collections/(?P<slug>[\\/\\w-]+)": {
            "namespace": "wp/v2",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "context": {
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "string",
                    "enum": [
                      "view",
                      "embed",
                      "edit"
                    ],
                    "default": "view",
                    "required": false
                  }
                }
              }
            ]
          }
        },
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "description": "Endpoints for wp/v2"
      },
      "wp-site-health/v1": {
        "namespace": "wp-site-health/v1",
        "routes": {
          "/wp-site-health/v1/tests/background-updates": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/tests/background-updates"
                }
              ]
            }
          },
          "/wp-site-health/v1/tests/loopback-requests": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/tests/loopback-requests"
                }
              ]
            }
          },
          "/wp-site-health/v1/tests/https-status": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/tests/https-status"
                }
              ]
            }
          },
          "/wp-site-health/v1/tests/dotorg-communication": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/tests/dotorg-communication"
                }
              ]
            }
          },
          "/wp-site-health/v1/tests/authorization-header": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/tests/authorization-header"
                }
              ]
            }
          },
          "/wp-site-health/v1/directory-sizes": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/directory-sizes"
                }
              ]
            }
          },
          "/wp-site-health/v1/tests/page-cache": {
            "namespace": "wp-site-health/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-site-health/v1/tests/page-cache"
                }
              ]
            }
          }
        },
        "methods": [
          "GET"
        ],
        "description": "Endpoints for wp-site-health/v1"
      },
      "wp-block-editor/v1": {
        "namespace": "wp-block-editor/v1",
        "routes": {
          "/wp-block-editor/v1/url-details": {
            "namespace": "wp-block-editor/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": {
                  "url": {
                    "description": "The URL to process.",
                    "type": "string",
                    "format": "uri",
                    "required": true
                  }
                }
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-block-editor/v1/url-details"
                }
              ]
            }
          },
          "/wp-block-editor/v1/export": {
            "namespace": "wp-block-editor/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-block-editor/v1/export"
                }
              ]
            }
          },
          "/wp-block-editor/v1/navigation-fallback": {
            "namespace": "wp-block-editor/v1",
            "methods": [
              "GET"
            ],
            "endpoints": [
              {
                "methods": [
                  "GET"
                ],
                "args": []
              }
            ],
            "_links": {
              "self": [
                {
                  "href": "https://cruisemadeeasy.com/wp-json/wp-block-editor/v1/navigation-fallback"
                }
              ]
            }
          }
        },
        "methods": [
          "GET"
        ],
        "description": "Endpoints for wp-block-editor/v1"
      }
    }
  },
  "generate_endpoints": {
    "success": true,
    "data": {
      "generatepress": {
        "generatepress-pro/v1": {
          "namespace": "generatepress-pro/v1",
          "routes": {
            "/generatepress-pro/v1/modules": {
              "namespace": "generatepress-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/modules"
                  }
                ]
              }
            },
            "/generatepress-pro/v1/license": {
              "namespace": "generatepress-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/license"
                  }
                ]
              }
            },
            "/generatepress-pro/v1/beta": {
              "namespace": "generatepress-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/beta"
                  }
                ]
              }
            },
            "/generatepress-pro/v1/export": {
              "namespace": "generatepress-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/export"
                  }
                ]
              }
            },
            "/generatepress-pro/v1/import": {
              "namespace": "generatepress-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/import"
                  }
                ]
              }
            },
            "/generatepress-pro/v1/reset": {
              "namespace": "generatepress-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-pro/v1/reset"
                  }
                ]
              }
            }
          },
          "methods": [
            "POST",
            "PUT",
            "PATCH"
          ],
          "description": "Endpoints for generatepress-pro/v1"
        },
        "generatepress-site-library/v1": {
          "namespace": "generatepress-site-library/v1",
          "routes": {
            "/generatepress-site-library/v1/get_sites": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/get_sites"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/get_site_data": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/get_site_data"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/import_theme_options": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_theme_options"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/activate_plugins": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/activate_plugins"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/import_content": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_content"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/import_site_options": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_site_options"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/import_widgets": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/import_widgets"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/restore_theme_options": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/restore_theme_options"
                  }
                ]
              }
            },
            "/generatepress-site-library/v1/restore_content": {
              "namespace": "generatepress-site-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-site-library/v1/restore_content"
                  }
                ]
              }
            }
          },
          "methods": [
            "GET",
            "POST",
            "PUT",
            "PATCH"
          ],
          "description": "Endpoints for generatepress-site-library/v1"
        },
        "generatepress-font-library/v1": {
          "namespace": "generatepress-font-library/v1",
          "routes": {
            "/generatepress-font-library/v1/get-fonts": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/get-fonts"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/download-google-font": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/download-google-font"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/upload-fonts": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/upload-fonts"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/delete-font": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/delete-font"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/get-settings": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/get-settings"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/set-settings": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/set-settings"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/optimize-google-fonts": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/optimize-google-fonts"
                  }
                ]
              }
            },
            "/generatepress-font-library/v1/update-font-post": {
              "namespace": "generatepress-font-library/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress-font-library/v1/update-font-post"
                  }
                ]
              }
            }
          },
          "methods": [
            "GET",
            "POST",
            "PUT",
            "PATCH"
          ],
          "description": "Endpoints for generatepress-font-library/v1"
        },
        "generatepress/v1": {
          "namespace": "generatepress/v1",
          "routes": {
            "/generatepress/v1/reset": {
              "namespace": "generatepress/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generatepress/v1/reset"
                  }
                ]
              }
            }
          },
          "methods": [
            "POST",
            "PUT",
            "PATCH"
          ],
          "description": "Endpoints for generatepress/v1"
        }
      },
      "generateblocks": {
        "generateblocks/v1": {
          "namespace": "generateblocks/v1",
          "routes": {
            "/generateblocks/v1/settings": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/settings"
                  }
                ]
              }
            },
            "/generateblocks/v1/setting": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/setting"
                  }
                ]
              }
            },
            "/generateblocks/v1/regenerate_css_files": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/regenerate_css_files"
                  }
                ]
              }
            },
            "/generateblocks/v1/onboarding": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/onboarding"
                  }
                ]
              }
            },
            "/generateblocks/v1/get-attachment-by-url": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-attachment-by-url"
                  }
                ]
              }
            },
            "/generateblocks/v1/get-wp-query": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-wp-query"
                  }
                ]
              }
            },
            "/generateblocks/v1/get-user-query": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-user-query"
                  }
                ]
              }
            },
            "/generateblocks/v1/meta/get-post-meta": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-post-meta"
                  }
                ]
              }
            },
            "/generateblocks/v1/meta/get-user-meta": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-user-meta"
                  }
                ]
              }
            },
            "/generateblocks/v1/meta/get-term-meta": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-term-meta"
                  }
                ]
              }
            },
            "/generateblocks/v1/meta/get-option": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/meta/get-option"
                  }
                ]
              }
            },
            "/generateblocks/v1/pattern-library/libraries": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/libraries"
                  }
                ]
              }
            },
            "/generateblocks/v1/pattern-library/libraries/save": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/libraries/save"
                  }
                ]
              }
            },
            "/generateblocks/v1/pattern-library/categories": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/categories"
                  }
                ]
              }
            },
            "/generateblocks/v1/pattern-library/patterns": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/patterns"
                  }
                ]
              }
            },
            "/generateblocks/v1/pattern-library/get-cache-data": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/get-cache-data"
                  }
                ]
              }
            },
            "/generateblocks/v1/pattern-library/clear-cache": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/pattern-library/clear-cache"
                  }
                ]
              }
            },
            "/generateblocks/v1/dynamic-tag-replacements": {
              "namespace": "generateblocks/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/dynamic-tag-replacements"
                  }
                ]
              }
            },
            "/generateblocks/v1/post-record": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "postId": {
                      "required": true
                    },
                    "load": {
                      "required": false
                    },
                    "options": {
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/post-record"
                  }
                ]
              }
            },
            "/generateblocks/v1/get-user-record": {
              "namespace": "generateblocks/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "id": {
                      "required": true
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks/v1/get-user-record"
                  }
                ]
              }
            }
          },
          "methods": [
            "POST",
            "PUT",
            "PATCH",
            "GET"
          ],
          "description": "Endpoints for generateblocks/v1"
        },
        "generateblocks-pro/v1": {
          "namespace": "generateblocks-pro/v1",
          "routes": {
            "/generateblocks-pro/v1/get_templates": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/get_templates"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/get_template_data": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/get_template_data"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/template-library": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/template-library"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/sync_template_library": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/sync_template_library"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/license": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/license"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/shape-settings": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/shape-settings"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/icon-settings": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/icon-settings"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/export-asset-group": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/export-asset-group"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/categories": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/categories"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/patterns": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/patterns"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/get-global-style-data": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/get-global-style-data"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/provide-global-style-data": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/provide-global-style-data"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/import-styles": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/import-styles"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/get-library-by-public-key": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/get-library-by-public-key"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/pattern-library/add-library": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/pattern-library/add-library"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/global-classes/check_class_name": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/check_class_name"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/global-classes/get": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/get"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/global-classes/get_css": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/get_css"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/global-classes/get_styles": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-classes/get_styles"
                  }
                ]
              }
            },
            "/generateblocks-pro/v1/global-styles/update_menu_order": {
              "namespace": "generateblocks-pro/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/v1/global-styles/update_menu_order"
                  }
                ]
              }
            }
          },
          "methods": [
            "GET",
            "POST",
            "PUT",
            "PATCH"
          ],
          "description": "Endpoints for generateblocks-pro/v1"
        },
        "generateblocks-pro/advanced-conditions/v1": {
          "namespace": "generateblocks-pro/advanced-conditions/v1",
          "routes": {
            "/generateblocks-pro/advanced-conditions/v1/get_condition_types": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_types"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/get_condition_categories": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_categories"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/manage_category": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/manage_category"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/manage_category/(?P<id>[\\d]+)": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "POST",
                "PUT",
                "PATCH",
                "DELETE"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": []
                },
                {
                  "methods": [
                    "DELETE"
                  ],
                  "args": []
                }
              ]
            },
            "/generateblocks-pro/advanced-conditions/v1/get_condition_rules": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "type": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_rules"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/get_condition_operators": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "rule": {
                      "type": "string",
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_condition_operators"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/search_posts": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "post_type": {
                      "type": "string",
                      "required": true
                    },
                    "search": {
                      "type": "string",
                      "required": false
                    },
                    "id": {
                      "type": "integer",
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_posts"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/search_terms": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "taxonomy": {
                      "type": "string",
                      "required": true
                    },
                    "search": {
                      "type": "string",
                      "required": false
                    },
                    "id": {
                      "type": "integer",
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_terms"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/validate_conditions": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": {
                    "conditions": {
                      "type": "object",
                      "required": true
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/validate_conditions"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/get_rule_metadata": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "type": {
                      "type": "string",
                      "required": true
                    },
                    "rule": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_rule_metadata"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/batch_object_titles": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": {
                    "requests": {
                      "type": "array",
                      "required": true
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/batch_object_titles"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/conditions": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET",
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "page": {
                      "type": "integer",
                      "default": 1,
                      "required": false
                    },
                    "per_page": {
                      "type": "integer",
                      "default": 10,
                      "required": false
                    }
                  }
                },
                {
                  "methods": [
                    "POST"
                  ],
                  "args": {
                    "title": {
                      "type": "string",
                      "required": true
                    },
                    "conditions": {
                      "type": "object",
                      "default": {
                        "logic": "OR",
                        "groups": []
                      },
                      "required": false
                    },
                    "status": {
                      "type": "string",
                      "default": "publish",
                      "enum": [
                        "publish",
                        "draft"
                      ],
                      "required": false
                    },
                    "category": {
                      "type": [
                        "array",
                        "string"
                      ],
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/conditions"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/conditions/(?P<id>\\d+)": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET",
                "POST",
                "PUT",
                "PATCH",
                "DELETE"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "id": {
                      "type": "integer",
                      "required": true
                    }
                  }
                },
                {
                  "methods": [
                    "POST",
                    "PUT",
                    "PATCH"
                  ],
                  "args": {
                    "id": {
                      "type": "integer",
                      "required": true
                    },
                    "title": {
                      "type": "string",
                      "required": false
                    },
                    "conditions": {
                      "type": "object",
                      "required": false
                    },
                    "status": {
                      "type": "string",
                      "required": false
                    }
                  }
                },
                {
                  "methods": [
                    "DELETE"
                  ],
                  "args": {
                    "id": {
                      "type": "integer",
                      "required": true
                    }
                  }
                }
              ]
            },
            "/generateblocks-pro/advanced-conditions/v1/search_hierarchical_posts": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "search": {
                      "type": "string",
                      "required": false
                    },
                    "id": {
                      "type": "integer",
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_hierarchical_posts"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/get_day_options": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/get_day_options"
                  }
                ]
              }
            },
            "/generateblocks-pro/advanced-conditions/v1/conditions/(?P<id>\\d+)/usage": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "id": {
                      "type": "integer",
                      "required": true
                    },
                    "page": {
                      "type": "integer",
                      "default": 1,
                      "required": false
                    },
                    "per_page": {
                      "type": "integer",
                      "default": 20,
                      "required": false
                    }
                  }
                }
              ]
            },
            "/generateblocks-pro/advanced-conditions/v1/search_users": {
              "namespace": "generateblocks-pro/advanced-conditions/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": {
                    "search": {
                      "type": "string",
                      "required": false
                    },
                    "id": {
                      "type": "integer",
                      "required": false
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/advanced-conditions/v1/search_users"
                  }
                ]
              }
            }
          },
          "methods": [
            "GET",
            "POST",
            "PUT",
            "PATCH",
            "DELETE"
          ],
          "description": "Endpoints for generateblocks-pro/advanced-conditions/v1"
        },
        "generateblocks-pro/overlays/v1": {
          "namespace": "generateblocks-pro/overlays/v1",
          "routes": {
            "/generateblocks-pro/overlays/v1/get_modal_categories": {
              "namespace": "generateblocks-pro/overlays/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/overlays/v1/get_modal_categories"
                  }
                ]
              }
            },
            "/generateblocks-pro/overlays/v1/manage_category": {
              "namespace": "generateblocks-pro/overlays/v1",
              "methods": [
                "POST"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": {
                    "name": {
                      "type": "string",
                      "required": true
                    }
                  }
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/overlays/v1/manage_category"
                  }
                ]
              }
            },
            "/generateblocks-pro/overlays/v1/overlays": {
              "namespace": "generateblocks-pro/overlays/v1",
              "methods": [
                "GET"
              ],
              "endpoints": [
                {
                  "methods": [
                    "GET"
                  ],
                  "args": []
                }
              ],
              "_links": {
                "self": [
                  {
                    "href": "https://cruisemadeeasy.com/wp-json/generateblocks-pro/overlays/v1/overlays"
                  }
                ]
              }
            },
            "/generateblocks-pro/overlays/v1/manage_category/(?P<id>\\d+)": {
              "namespace": "generateblocks-pro/overlays/v1",
              "methods": [
                "POST",
                "DELETE"
              ],
              "endpoints": [
                {
                  "methods": [
                    "POST"
                  ],
                  "args": {
                    "id": {
                      "type": "integer",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "required": true
                    }
                  }
                },
                {
                  "methods": [
                    "DELETE"
                  ],
                  "args": {
                    "id": {
                      "type": "integer",
                      "required": true
                    }
                  }
                }
              ]
            }
          },
          "methods": [
            "GET",
            "POST",
            "DELETE"
          ],
          "description": "Endpoints for generateblocks-pro/overlays/v1"
        }
      },
      "related_themes": {},
      "custom_post_types": {}
    }
  },
  "session_info": {
    "timestamp": "2025-09-21T18:22:44.757Z",
    "session": 1,
    "total_endpoints": 456,
    "accessible_endpoints": 0,
    "generate_specific": 8
  }
}
